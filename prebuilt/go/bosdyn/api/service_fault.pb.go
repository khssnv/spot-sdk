// Copyright (c) 2022 Boston Dynamics, Inc.  All rights reserved.
//
// Downloading, reproducing, distributing or otherwise using the SDK Software
// is subject to the terms and conditions of the Boston Dynamics Software
// Development Kit License (20191101-BDSDK-SL).

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: bosdyn/api/service_fault.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServiceFault_Severity int32

const (
	// Unknown severity
	ServiceFault_SEVERITY_UNKNOWN ServiceFault_Severity = 0
	// Service still functional
	ServiceFault_SEVERITY_INFO ServiceFault_Severity = 1
	// Service performance may be degraded
	ServiceFault_SEVERITY_WARN ServiceFault_Severity = 2
	// Critical service fault
	ServiceFault_SEVERITY_CRITICAL ServiceFault_Severity = 3
)

// Enum value maps for ServiceFault_Severity.
var (
	ServiceFault_Severity_name = map[int32]string{
		0: "SEVERITY_UNKNOWN",
		1: "SEVERITY_INFO",
		2: "SEVERITY_WARN",
		3: "SEVERITY_CRITICAL",
	}
	ServiceFault_Severity_value = map[string]int32{
		"SEVERITY_UNKNOWN":  0,
		"SEVERITY_INFO":     1,
		"SEVERITY_WARN":     2,
		"SEVERITY_CRITICAL": 3,
	}
)

func (x ServiceFault_Severity) Enum() *ServiceFault_Severity {
	p := new(ServiceFault_Severity)
	*p = x
	return p
}

func (x ServiceFault_Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceFault_Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_bosdyn_api_service_fault_proto_enumTypes[0].Descriptor()
}

func (ServiceFault_Severity) Type() protoreflect.EnumType {
	return &file_bosdyn_api_service_fault_proto_enumTypes[0]
}

func (x ServiceFault_Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceFault_Severity.Descriptor instead.
func (ServiceFault_Severity) EnumDescriptor() ([]byte, []int) {
	return file_bosdyn_api_service_fault_proto_rawDescGZIP(), []int{1, 0}
}

type TriggerServiceFaultResponse_Status int32

const (
	// UNKNOWN should never be used.
	TriggerServiceFaultResponse_STATUS_UNKNOWN TriggerServiceFaultResponse_Status = 0
	// Success. The fault has been triggerd.
	TriggerServiceFaultResponse_STATUS_OK TriggerServiceFaultResponse_Status = 1
	// ServiceFaultId already in active faults.
	TriggerServiceFaultResponse_STATUS_FAULT_ALREADY_ACTIVE TriggerServiceFaultResponse_Status = 2
)

// Enum value maps for TriggerServiceFaultResponse_Status.
var (
	TriggerServiceFaultResponse_Status_name = map[int32]string{
		0: "STATUS_UNKNOWN",
		1: "STATUS_OK",
		2: "STATUS_FAULT_ALREADY_ACTIVE",
	}
	TriggerServiceFaultResponse_Status_value = map[string]int32{
		"STATUS_UNKNOWN":              0,
		"STATUS_OK":                   1,
		"STATUS_FAULT_ALREADY_ACTIVE": 2,
	}
)

func (x TriggerServiceFaultResponse_Status) Enum() *TriggerServiceFaultResponse_Status {
	p := new(TriggerServiceFaultResponse_Status)
	*p = x
	return p
}

func (x TriggerServiceFaultResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TriggerServiceFaultResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_bosdyn_api_service_fault_proto_enumTypes[1].Descriptor()
}

func (TriggerServiceFaultResponse_Status) Type() protoreflect.EnumType {
	return &file_bosdyn_api_service_fault_proto_enumTypes[1]
}

func (x TriggerServiceFaultResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TriggerServiceFaultResponse_Status.Descriptor instead.
func (TriggerServiceFaultResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_bosdyn_api_service_fault_proto_rawDescGZIP(), []int{3, 0}
}

type ClearServiceFaultResponse_Status int32

const (
	// UNKNOWN should never be used.
	ClearServiceFaultResponse_STATUS_UNKNOWN ClearServiceFaultResponse_Status = 0
	// Success. The fault has been cleared.
	ClearServiceFaultResponse_STATUS_OK ClearServiceFaultResponse_Status = 1
	// ServiceFaultId not found in active faults.
	ClearServiceFaultResponse_STATUS_FAULT_NOT_ACTIVE ClearServiceFaultResponse_Status = 2
)

// Enum value maps for ClearServiceFaultResponse_Status.
var (
	ClearServiceFaultResponse_Status_name = map[int32]string{
		0: "STATUS_UNKNOWN",
		1: "STATUS_OK",
		2: "STATUS_FAULT_NOT_ACTIVE",
	}
	ClearServiceFaultResponse_Status_value = map[string]int32{
		"STATUS_UNKNOWN":          0,
		"STATUS_OK":               1,
		"STATUS_FAULT_NOT_ACTIVE": 2,
	}
)

func (x ClearServiceFaultResponse_Status) Enum() *ClearServiceFaultResponse_Status {
	p := new(ClearServiceFaultResponse_Status)
	*p = x
	return p
}

func (x ClearServiceFaultResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClearServiceFaultResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_bosdyn_api_service_fault_proto_enumTypes[2].Descriptor()
}

func (ClearServiceFaultResponse_Status) Type() protoreflect.EnumType {
	return &file_bosdyn_api_service_fault_proto_enumTypes[2]
}

func (x ClearServiceFaultResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClearServiceFaultResponse_Status.Descriptor instead.
func (ClearServiceFaultResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_bosdyn_api_service_fault_proto_rawDescGZIP(), []int{5, 0}
}

// Information necessary to uniquely specify a service fault.
// A service fault typically is associated with a service running on the robot or a
// payload. Occassionally, the fault may pertain to a payload but no specific service
// on the payload. In that situation, no service_name should not be specified and instead
// a payload_guid should be specified. Otherwise, in the standard case of a service
// originating fault, only the service_name should be specified and the payload_guid
// will be populated automatically by the fault service on robot.
type ServiceFaultId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the fault.
	FaultName string `protobuf:"bytes,1,opt,name=fault_name,json=faultName,proto3" json:"fault_name,omitempty"`
	// Name of the registered service associated with the fault.
	// Optional. Service name does not need to be specified if this is a payload-level
	// fault with no associated service.
	ServiceName string `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// GUID of the payload associated with the faulted service.
	// Optional. If not set, it will be assigned to the payload associated with the
	// service_name.
	PayloadGuid string `protobuf:"bytes,3,opt,name=payload_guid,json=payloadGuid,proto3" json:"payload_guid,omitempty"`
}

func (x *ServiceFaultId) Reset() {
	*x = ServiceFaultId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_service_fault_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceFaultId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceFaultId) ProtoMessage() {}

func (x *ServiceFaultId) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_service_fault_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceFaultId.ProtoReflect.Descriptor instead.
func (*ServiceFaultId) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_service_fault_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceFaultId) GetFaultName() string {
	if x != nil {
		return x.FaultName
	}
	return ""
}

func (x *ServiceFaultId) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *ServiceFaultId) GetPayloadGuid() string {
	if x != nil {
		return x.PayloadGuid
	}
	return ""
}

// The current service faults for services registered with the robot.
// A fault is an indicator of a problem with a service or payload registered
// with the robot. An active fault may indicate a service may fail to comply
// with a user request.
// If the name, service_name, and payload_guid of a newly triggered ServiceFault matches an
// already active ServiceFault the new fault will not be added to the active fault list.
// The oldest matching fault will be maintained.
type ServiceFault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifying information of the fault.
	FaultId *ServiceFaultId `protobuf:"bytes,1,opt,name=fault_id,json=faultId,proto3" json:"fault_id,omitempty"`
	// User visible description of the fault (and possibly remedies). Will be
	// displayed on tablet.
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Fault attributes
	// Each fault may be flagged with attribute metadata (strings in this case.)
	// These attributes are useful to communicate that a particular fault may
	// have significant effect on the operations of services. Some potential attributes
	// may be "autowalk", "Spot CORE", "vision", or "gauge detection". These
	// attributes enable the caller to flag a fault as indicating a problem with
	// particular robot abstractions. A fault may have, zero, one, or more
	// attributes attached to it.
	Attributes []string `protobuf:"bytes,3,rep,name=attributes,proto3" json:"attributes,omitempty"`
	// The severity level will have some indication of the potential breakage
	// resulting from the fault. For example, a fault associated with payload
	// X and severity level SEVERITY_INFO may indicate the payload is in an
	// unexpected state but still operational. However, a fault with serverity
	// level SEVERITY_CRITICAL may indicate the payload is no
	// longer operational.
	Severity ServiceFault_Severity `protobuf:"varint,4,opt,name=severity,proto3,enum=bosdyn.api.ServiceFault_Severity" json:"severity,omitempty"`
	// Time of robot local clock at fault onset. Set by robot-state service.
	OnsetTimestamp *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=onset_timestamp,json=onsetTimestamp,proto3" json:"onset_timestamp,omitempty"`
	// Time elapsed since onset of the fault. Set by robot-state service.
	Duration *durationpb.Duration `protobuf:"bytes,6,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *ServiceFault) Reset() {
	*x = ServiceFault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_service_fault_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceFault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceFault) ProtoMessage() {}

func (x *ServiceFault) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_service_fault_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceFault.ProtoReflect.Descriptor instead.
func (*ServiceFault) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_service_fault_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceFault) GetFaultId() *ServiceFaultId {
	if x != nil {
		return x.FaultId
	}
	return nil
}

func (x *ServiceFault) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ServiceFault) GetAttributes() []string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *ServiceFault) GetSeverity() ServiceFault_Severity {
	if x != nil {
		return x.Severity
	}
	return ServiceFault_SEVERITY_UNKNOWN
}

func (x *ServiceFault) GetOnsetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.OnsetTimestamp
	}
	return nil
}

func (x *ServiceFault) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

// Trigger a new service fault that will be reported in the robot ServiceFaultState.
// These faults will be displayed in the tablet. Developers should be careful to
// avoid overwhelming operators with dozens of minor messages.
type TriggerServiceFaultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common request header.
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// The fault to report in ServiceFaultState.
	Fault *ServiceFault `protobuf:"bytes,2,opt,name=fault,proto3" json:"fault,omitempty"`
}

func (x *TriggerServiceFaultRequest) Reset() {
	*x = TriggerServiceFaultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_service_fault_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerServiceFaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerServiceFaultRequest) ProtoMessage() {}

func (x *TriggerServiceFaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_service_fault_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerServiceFaultRequest.ProtoReflect.Descriptor instead.
func (*TriggerServiceFaultRequest) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_service_fault_proto_rawDescGZIP(), []int{2}
}

func (x *TriggerServiceFaultRequest) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *TriggerServiceFaultRequest) GetFault() *ServiceFault {
	if x != nil {
		return x.Fault
	}
	return nil
}

// The TriggerServiceFault response message contains a header indicating success.
type TriggerServiceFaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common response header.
	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Return status for the request.
	Status TriggerServiceFaultResponse_Status `protobuf:"varint,2,opt,name=status,proto3,enum=bosdyn.api.TriggerServiceFaultResponse_Status" json:"status,omitempty"`
}

func (x *TriggerServiceFaultResponse) Reset() {
	*x = TriggerServiceFaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_service_fault_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerServiceFaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerServiceFaultResponse) ProtoMessage() {}

func (x *TriggerServiceFaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_service_fault_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerServiceFaultResponse.ProtoReflect.Descriptor instead.
func (*TriggerServiceFaultResponse) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_service_fault_proto_rawDescGZIP(), []int{3}
}

func (x *TriggerServiceFaultResponse) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *TriggerServiceFaultResponse) GetStatus() TriggerServiceFaultResponse_Status {
	if x != nil {
		return x.Status
	}
	return TriggerServiceFaultResponse_STATUS_UNKNOWN
}

// Clear a service fault from the robot's ServiceFaultState (in robot_state.proto).
// The active ServiceFault to clear will be determined by matching fault_name and
// service_name/payload_guid, specified in the ServiceFaultId message.
type ClearServiceFaultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common request header.
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Identifying information of the fault to clear.
	FaultId *ServiceFaultId `protobuf:"bytes,2,opt,name=fault_id,json=faultId,proto3" json:"fault_id,omitempty"`
	// Clear all faults that are associated with the same service_name. Use carefully.
	ClearAllServiceFaults bool `protobuf:"varint,3,opt,name=clear_all_service_faults,json=clearAllServiceFaults,proto3" json:"clear_all_service_faults,omitempty"`
	// Clear all faults that are associated with the same payload_guid. Use carefully.
	ClearAllPayloadFaults bool `protobuf:"varint,4,opt,name=clear_all_payload_faults,json=clearAllPayloadFaults,proto3" json:"clear_all_payload_faults,omitempty"`
}

func (x *ClearServiceFaultRequest) Reset() {
	*x = ClearServiceFaultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_service_fault_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearServiceFaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearServiceFaultRequest) ProtoMessage() {}

func (x *ClearServiceFaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_service_fault_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearServiceFaultRequest.ProtoReflect.Descriptor instead.
func (*ClearServiceFaultRequest) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_service_fault_proto_rawDescGZIP(), []int{4}
}

func (x *ClearServiceFaultRequest) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ClearServiceFaultRequest) GetFaultId() *ServiceFaultId {
	if x != nil {
		return x.FaultId
	}
	return nil
}

func (x *ClearServiceFaultRequest) GetClearAllServiceFaults() bool {
	if x != nil {
		return x.ClearAllServiceFaults
	}
	return false
}

func (x *ClearServiceFaultRequest) GetClearAllPayloadFaults() bool {
	if x != nil {
		return x.ClearAllPayloadFaults
	}
	return false
}

// The ClearServiceFault response message contains a header indicating success.
type ClearServiceFaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common response header.
	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Return status for the request.
	Status ClearServiceFaultResponse_Status `protobuf:"varint,2,opt,name=status,proto3,enum=bosdyn.api.ClearServiceFaultResponse_Status" json:"status,omitempty"`
}

func (x *ClearServiceFaultResponse) Reset() {
	*x = ClearServiceFaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_service_fault_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearServiceFaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearServiceFaultResponse) ProtoMessage() {}

func (x *ClearServiceFaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_service_fault_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearServiceFaultResponse.ProtoReflect.Descriptor instead.
func (*ClearServiceFaultResponse) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_service_fault_proto_rawDescGZIP(), []int{5}
}

func (x *ClearServiceFaultResponse) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ClearServiceFaultResponse) GetStatus() ClearServiceFaultResponse_Status {
	if x != nil {
		return x.Status
	}
	return ClearServiceFaultResponse_STATUS_UNKNOWN
}

var File_bosdyn_api_service_fault_proto protoreflect.FileDescriptor

var file_bosdyn_api_service_fault_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0a, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x17, 0x62, 0x6f,
	0x73, 0x64, 0x79, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x75, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x75, 0x69, 0x64, 0x22, 0xa4, 0x03,
	0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x35,
	0x0a, 0x08, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x52, 0x07, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x62,
	0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x0f, 0x6f, 0x6e, 0x73,
	0x65, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e,
	0x6f, 0x6e, 0x73, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x35,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5d, 0x0a, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x45, 0x56, 0x45, 0x52,
	0x49, 0x54, 0x59, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x45,
	0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x57, 0x41, 0x52, 0x4e, 0x10, 0x02, 0x12, 0x15, 0x0a,
	0x11, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43,
	0x41, 0x4c, 0x10, 0x03, 0x22, 0x7f, 0x0a, 0x1a, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x05, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x05,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0xe7, 0x01, 0x0a, 0x1b, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x62, 0x6f, 0x73, 0x64,
	0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x4c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x0d, 0x0a, 0x09, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x1f,
	0x0a, 0x1b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x41,
	0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x22,
	0xf6, 0x01, 0x0a, 0x18, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x46, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62,
	0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x35, 0x0a, 0x08, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x52, 0x07, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f,
	0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x41,
	0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x37, 0x0a, 0x18, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x15, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xdf, 0x01, 0x0a, 0x19, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x62, 0x6f, 0x73,
	0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x48, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x1b, 0x0a,
	0x17, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x42, 0x46, 0x42, 0x11, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a,
	0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x68, 0x73, 0x73,
	0x6e, 0x76, 0x2f, 0x73, 0x70, 0x6f, 0x74, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x65, 0x62,
	0x75, 0x69, 0x6c, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2f, 0x61,
	0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bosdyn_api_service_fault_proto_rawDescOnce sync.Once
	file_bosdyn_api_service_fault_proto_rawDescData = file_bosdyn_api_service_fault_proto_rawDesc
)

func file_bosdyn_api_service_fault_proto_rawDescGZIP() []byte {
	file_bosdyn_api_service_fault_proto_rawDescOnce.Do(func() {
		file_bosdyn_api_service_fault_proto_rawDescData = protoimpl.X.CompressGZIP(file_bosdyn_api_service_fault_proto_rawDescData)
	})
	return file_bosdyn_api_service_fault_proto_rawDescData
}

var file_bosdyn_api_service_fault_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_bosdyn_api_service_fault_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_bosdyn_api_service_fault_proto_goTypes = []interface{}{
	(ServiceFault_Severity)(0),              // 0: bosdyn.api.ServiceFault.Severity
	(TriggerServiceFaultResponse_Status)(0), // 1: bosdyn.api.TriggerServiceFaultResponse.Status
	(ClearServiceFaultResponse_Status)(0),   // 2: bosdyn.api.ClearServiceFaultResponse.Status
	(*ServiceFaultId)(nil),                  // 3: bosdyn.api.ServiceFaultId
	(*ServiceFault)(nil),                    // 4: bosdyn.api.ServiceFault
	(*TriggerServiceFaultRequest)(nil),      // 5: bosdyn.api.TriggerServiceFaultRequest
	(*TriggerServiceFaultResponse)(nil),     // 6: bosdyn.api.TriggerServiceFaultResponse
	(*ClearServiceFaultRequest)(nil),        // 7: bosdyn.api.ClearServiceFaultRequest
	(*ClearServiceFaultResponse)(nil),       // 8: bosdyn.api.ClearServiceFaultResponse
	(*timestamppb.Timestamp)(nil),           // 9: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),             // 10: google.protobuf.Duration
	(*RequestHeader)(nil),                   // 11: bosdyn.api.RequestHeader
	(*ResponseHeader)(nil),                  // 12: bosdyn.api.ResponseHeader
}
var file_bosdyn_api_service_fault_proto_depIdxs = []int32{
	3,  // 0: bosdyn.api.ServiceFault.fault_id:type_name -> bosdyn.api.ServiceFaultId
	0,  // 1: bosdyn.api.ServiceFault.severity:type_name -> bosdyn.api.ServiceFault.Severity
	9,  // 2: bosdyn.api.ServiceFault.onset_timestamp:type_name -> google.protobuf.Timestamp
	10, // 3: bosdyn.api.ServiceFault.duration:type_name -> google.protobuf.Duration
	11, // 4: bosdyn.api.TriggerServiceFaultRequest.header:type_name -> bosdyn.api.RequestHeader
	4,  // 5: bosdyn.api.TriggerServiceFaultRequest.fault:type_name -> bosdyn.api.ServiceFault
	12, // 6: bosdyn.api.TriggerServiceFaultResponse.header:type_name -> bosdyn.api.ResponseHeader
	1,  // 7: bosdyn.api.TriggerServiceFaultResponse.status:type_name -> bosdyn.api.TriggerServiceFaultResponse.Status
	11, // 8: bosdyn.api.ClearServiceFaultRequest.header:type_name -> bosdyn.api.RequestHeader
	3,  // 9: bosdyn.api.ClearServiceFaultRequest.fault_id:type_name -> bosdyn.api.ServiceFaultId
	12, // 10: bosdyn.api.ClearServiceFaultResponse.header:type_name -> bosdyn.api.ResponseHeader
	2,  // 11: bosdyn.api.ClearServiceFaultResponse.status:type_name -> bosdyn.api.ClearServiceFaultResponse.Status
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_bosdyn_api_service_fault_proto_init() }
func file_bosdyn_api_service_fault_proto_init() {
	if File_bosdyn_api_service_fault_proto != nil {
		return
	}
	file_bosdyn_api_header_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bosdyn_api_service_fault_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceFaultId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_service_fault_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceFault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_service_fault_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerServiceFaultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_service_fault_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerServiceFaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_service_fault_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearServiceFaultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_service_fault_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearServiceFaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bosdyn_api_service_fault_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bosdyn_api_service_fault_proto_goTypes,
		DependencyIndexes: file_bosdyn_api_service_fault_proto_depIdxs,
		EnumInfos:         file_bosdyn_api_service_fault_proto_enumTypes,
		MessageInfos:      file_bosdyn_api_service_fault_proto_msgTypes,
	}.Build()
	File_bosdyn_api_service_fault_proto = out.File
	file_bosdyn_api_service_fault_proto_rawDesc = nil
	file_bosdyn_api_service_fault_proto_goTypes = nil
	file_bosdyn_api_service_fault_proto_depIdxs = nil
}
