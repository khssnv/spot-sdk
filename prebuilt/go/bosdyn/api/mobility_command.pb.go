// Copyright (c) 2021 Boston Dynamics, Inc.  All rights reserved.
//
// Downloading, reproducing, distributing or otherwise using the SDK Software
// is subject to the terms and conditions of the Boston Dynamics Software
// Development Kit License (20191101-BDSDK-SL).

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: bosdyn/api/mobility_command.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The robot command message to specify a basic command that moves the robot.
type MobilityCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MobilityCommand) Reset() {
	*x = MobilityCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_mobility_command_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MobilityCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MobilityCommand) ProtoMessage() {}

func (x *MobilityCommand) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_mobility_command_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MobilityCommand.ProtoReflect.Descriptor instead.
func (*MobilityCommand) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_mobility_command_proto_rawDescGZIP(), []int{0}
}

// The mobility request must be one of the basic command primitives.
type MobilityCommand_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Only one mobility command can be requested at a time.
	//
	// Types that are assignable to Command:
	//	*MobilityCommand_Request_Se2TrajectoryRequest
	//	*MobilityCommand_Request_Se2VelocityRequest
	//	*MobilityCommand_Request_SitRequest
	//	*MobilityCommand_Request_StandRequest
	//	*MobilityCommand_Request_StanceRequest
	//	*MobilityCommand_Request_StopRequest
	//	*MobilityCommand_Request_FollowArmRequest
	Command isMobilityCommand_Request_Command `protobuf_oneof:"command"`
	// Robot specific command parameters.
	Params *anypb.Any `protobuf:"bytes,100,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *MobilityCommand_Request) Reset() {
	*x = MobilityCommand_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_mobility_command_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MobilityCommand_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MobilityCommand_Request) ProtoMessage() {}

func (x *MobilityCommand_Request) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_mobility_command_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MobilityCommand_Request.ProtoReflect.Descriptor instead.
func (*MobilityCommand_Request) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_mobility_command_proto_rawDescGZIP(), []int{0, 0}
}

func (m *MobilityCommand_Request) GetCommand() isMobilityCommand_Request_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (x *MobilityCommand_Request) GetSe2TrajectoryRequest() *SE2TrajectoryCommand_Request {
	if x, ok := x.GetCommand().(*MobilityCommand_Request_Se2TrajectoryRequest); ok {
		return x.Se2TrajectoryRequest
	}
	return nil
}

func (x *MobilityCommand_Request) GetSe2VelocityRequest() *SE2VelocityCommand_Request {
	if x, ok := x.GetCommand().(*MobilityCommand_Request_Se2VelocityRequest); ok {
		return x.Se2VelocityRequest
	}
	return nil
}

func (x *MobilityCommand_Request) GetSitRequest() *SitCommand_Request {
	if x, ok := x.GetCommand().(*MobilityCommand_Request_SitRequest); ok {
		return x.SitRequest
	}
	return nil
}

func (x *MobilityCommand_Request) GetStandRequest() *StandCommand_Request {
	if x, ok := x.GetCommand().(*MobilityCommand_Request_StandRequest); ok {
		return x.StandRequest
	}
	return nil
}

func (x *MobilityCommand_Request) GetStanceRequest() *StanceCommand_Request {
	if x, ok := x.GetCommand().(*MobilityCommand_Request_StanceRequest); ok {
		return x.StanceRequest
	}
	return nil
}

func (x *MobilityCommand_Request) GetStopRequest() *StopCommand_Request {
	if x, ok := x.GetCommand().(*MobilityCommand_Request_StopRequest); ok {
		return x.StopRequest
	}
	return nil
}

func (x *MobilityCommand_Request) GetFollowArmRequest() *FollowArmCommand_Request {
	if x, ok := x.GetCommand().(*MobilityCommand_Request_FollowArmRequest); ok {
		return x.FollowArmRequest
	}
	return nil
}

func (x *MobilityCommand_Request) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

type isMobilityCommand_Request_Command interface {
	isMobilityCommand_Request_Command()
}

type MobilityCommand_Request_Se2TrajectoryRequest struct {
	// Command to move the robot along a trajectory.
	Se2TrajectoryRequest *SE2TrajectoryCommand_Request `protobuf:"bytes,1,opt,name=se2_trajectory_request,json=se2TrajectoryRequest,proto3,oneof"`
}

type MobilityCommand_Request_Se2VelocityRequest struct {
	// Command to move the robot at a fixed velocity.
	Se2VelocityRequest *SE2VelocityCommand_Request `protobuf:"bytes,2,opt,name=se2_velocity_request,json=se2VelocityRequest,proto3,oneof"`
}

type MobilityCommand_Request_SitRequest struct {
	// Command to sit the robot down.
	SitRequest *SitCommand_Request `protobuf:"bytes,3,opt,name=sit_request,json=sitRequest,proto3,oneof"`
}

type MobilityCommand_Request_StandRequest struct {
	// Command to stand up the robot.
	StandRequest *StandCommand_Request `protobuf:"bytes,4,opt,name=stand_request,json=standRequest,proto3,oneof"`
}

type MobilityCommand_Request_StanceRequest struct {
	StanceRequest *StanceCommand_Request `protobuf:"bytes,5,opt,name=stance_request,json=stanceRequest,proto3,oneof"`
}

type MobilityCommand_Request_StopRequest struct {
	StopRequest *StopCommand_Request `protobuf:"bytes,6,opt,name=stop_request,json=stopRequest,proto3,oneof"`
}

type MobilityCommand_Request_FollowArmRequest struct {
	FollowArmRequest *FollowArmCommand_Request `protobuf:"bytes,7,opt,name=follow_arm_request,json=followArmRequest,proto3,oneof"`
}

func (*MobilityCommand_Request_Se2TrajectoryRequest) isMobilityCommand_Request_Command() {}

func (*MobilityCommand_Request_Se2VelocityRequest) isMobilityCommand_Request_Command() {}

func (*MobilityCommand_Request_SitRequest) isMobilityCommand_Request_Command() {}

func (*MobilityCommand_Request_StandRequest) isMobilityCommand_Request_Command() {}

func (*MobilityCommand_Request_StanceRequest) isMobilityCommand_Request_Command() {}

func (*MobilityCommand_Request_StopRequest) isMobilityCommand_Request_Command() {}

func (*MobilityCommand_Request_FollowArmRequest) isMobilityCommand_Request_Command() {}

// The feedback for the mobility command that will provide information on the progress
// of the robot command.
type MobilityCommand_Feedback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The feedback message associated with the requested command. Some commands may have
	// an empty feedback message if they do not provide any updates/progress.
	//
	// Types that are assignable to Feedback:
	//	*MobilityCommand_Feedback_Se2TrajectoryFeedback
	//	*MobilityCommand_Feedback_Se2VelocityFeedback
	//	*MobilityCommand_Feedback_SitFeedback
	//	*MobilityCommand_Feedback_StandFeedback
	//	*MobilityCommand_Feedback_StanceFeedback
	//	*MobilityCommand_Feedback_StopFeedback
	//	*MobilityCommand_Feedback_FollowArmFeedback
	Feedback isMobilityCommand_Feedback_Feedback `protobuf_oneof:"feedback"`
	Status   RobotCommandFeedbackStatus_Status   `protobuf:"varint,100,opt,name=status,proto3,enum=bosdyn.api.RobotCommandFeedbackStatus_Status" json:"status,omitempty"`
}

func (x *MobilityCommand_Feedback) Reset() {
	*x = MobilityCommand_Feedback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_mobility_command_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MobilityCommand_Feedback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MobilityCommand_Feedback) ProtoMessage() {}

func (x *MobilityCommand_Feedback) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_mobility_command_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MobilityCommand_Feedback.ProtoReflect.Descriptor instead.
func (*MobilityCommand_Feedback) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_mobility_command_proto_rawDescGZIP(), []int{0, 1}
}

func (m *MobilityCommand_Feedback) GetFeedback() isMobilityCommand_Feedback_Feedback {
	if m != nil {
		return m.Feedback
	}
	return nil
}

func (x *MobilityCommand_Feedback) GetSe2TrajectoryFeedback() *SE2TrajectoryCommand_Feedback {
	if x, ok := x.GetFeedback().(*MobilityCommand_Feedback_Se2TrajectoryFeedback); ok {
		return x.Se2TrajectoryFeedback
	}
	return nil
}

func (x *MobilityCommand_Feedback) GetSe2VelocityFeedback() *SE2VelocityCommand_Feedback {
	if x, ok := x.GetFeedback().(*MobilityCommand_Feedback_Se2VelocityFeedback); ok {
		return x.Se2VelocityFeedback
	}
	return nil
}

func (x *MobilityCommand_Feedback) GetSitFeedback() *SitCommand_Feedback {
	if x, ok := x.GetFeedback().(*MobilityCommand_Feedback_SitFeedback); ok {
		return x.SitFeedback
	}
	return nil
}

func (x *MobilityCommand_Feedback) GetStandFeedback() *StandCommand_Feedback {
	if x, ok := x.GetFeedback().(*MobilityCommand_Feedback_StandFeedback); ok {
		return x.StandFeedback
	}
	return nil
}

func (x *MobilityCommand_Feedback) GetStanceFeedback() *StanceCommand_Feedback {
	if x, ok := x.GetFeedback().(*MobilityCommand_Feedback_StanceFeedback); ok {
		return x.StanceFeedback
	}
	return nil
}

func (x *MobilityCommand_Feedback) GetStopFeedback() *StopCommand_Feedback {
	if x, ok := x.GetFeedback().(*MobilityCommand_Feedback_StopFeedback); ok {
		return x.StopFeedback
	}
	return nil
}

func (x *MobilityCommand_Feedback) GetFollowArmFeedback() *FollowArmCommand_Feedback {
	if x, ok := x.GetFeedback().(*MobilityCommand_Feedback_FollowArmFeedback); ok {
		return x.FollowArmFeedback
	}
	return nil
}

func (x *MobilityCommand_Feedback) GetStatus() RobotCommandFeedbackStatus_Status {
	if x != nil {
		return x.Status
	}
	return RobotCommandFeedbackStatus_STATUS_UNKNOWN
}

type isMobilityCommand_Feedback_Feedback interface {
	isMobilityCommand_Feedback_Feedback()
}

type MobilityCommand_Feedback_Se2TrajectoryFeedback struct {
	// Feedback for the trajectory command.
	Se2TrajectoryFeedback *SE2TrajectoryCommand_Feedback `protobuf:"bytes,1,opt,name=se2_trajectory_feedback,json=se2TrajectoryFeedback,proto3,oneof"`
}

type MobilityCommand_Feedback_Se2VelocityFeedback struct {
	// Feedback for the velocity command.
	Se2VelocityFeedback *SE2VelocityCommand_Feedback `protobuf:"bytes,2,opt,name=se2_velocity_feedback,json=se2VelocityFeedback,proto3,oneof"`
}

type MobilityCommand_Feedback_SitFeedback struct {
	// Feedback for the sit command.
	SitFeedback *SitCommand_Feedback `protobuf:"bytes,3,opt,name=sit_feedback,json=sitFeedback,proto3,oneof"`
}

type MobilityCommand_Feedback_StandFeedback struct {
	// Feedback for the stand command.
	StandFeedback *StandCommand_Feedback `protobuf:"bytes,4,opt,name=stand_feedback,json=standFeedback,proto3,oneof"`
}

type MobilityCommand_Feedback_StanceFeedback struct {
	StanceFeedback *StanceCommand_Feedback `protobuf:"bytes,5,opt,name=stance_feedback,json=stanceFeedback,proto3,oneof"`
}

type MobilityCommand_Feedback_StopFeedback struct {
	StopFeedback *StopCommand_Feedback `protobuf:"bytes,6,opt,name=stop_feedback,json=stopFeedback,proto3,oneof"`
}

type MobilityCommand_Feedback_FollowArmFeedback struct {
	FollowArmFeedback *FollowArmCommand_Feedback `protobuf:"bytes,7,opt,name=follow_arm_feedback,json=followArmFeedback,proto3,oneof"`
}

func (*MobilityCommand_Feedback_Se2TrajectoryFeedback) isMobilityCommand_Feedback_Feedback() {}

func (*MobilityCommand_Feedback_Se2VelocityFeedback) isMobilityCommand_Feedback_Feedback() {}

func (*MobilityCommand_Feedback_SitFeedback) isMobilityCommand_Feedback_Feedback() {}

func (*MobilityCommand_Feedback_StandFeedback) isMobilityCommand_Feedback_Feedback() {}

func (*MobilityCommand_Feedback_StanceFeedback) isMobilityCommand_Feedback_Feedback() {}

func (*MobilityCommand_Feedback_StopFeedback) isMobilityCommand_Feedback_Feedback() {}

func (*MobilityCommand_Feedback_FollowArmFeedback) isMobilityCommand_Feedback_Feedback() {}

var File_bosdyn_api_mobility_command_proto protoreflect.FileDescriptor

var file_bosdyn_api_mobility_command_proto_rawDesc = []byte{
	0x0a, 0x21, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x1a,
	0x1e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaf, 0x0a, 0x0a, 0x0f, 0x4d,
	0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0xf4,
	0x04, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x60, 0x0a, 0x16, 0x73, 0x65,
	0x32, 0x5f, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x6f, 0x73,
	0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x45, 0x32, 0x54, 0x72, 0x61, 0x6a, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x73, 0x65, 0x32, 0x54, 0x72, 0x61, 0x6a, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x14,
	0x73, 0x65, 0x32, 0x5f, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x6f, 0x73,
	0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x45, 0x32, 0x56, 0x65, 0x6c, 0x6f, 0x63,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x73, 0x65, 0x32, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0b, 0x73, 0x69, 0x74, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x69, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x0a, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x0d, 0x73,
	0x74, 0x61, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x74, 0x61, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62,
	0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x44, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x12, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x5f, 0x61, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x72, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x41, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0xa4, 0x05, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x12, 0x63, 0x0a, 0x17, 0x73, 0x65, 0x32, 0x5f, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x45, 0x32, 0x54, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00,
	0x52, 0x15, 0x73, 0x65, 0x32, 0x54, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x5d, 0x0a, 0x15, 0x73, 0x65, 0x32, 0x5f, 0x76,
	0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x45, 0x32, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x48,
	0x00, 0x52, 0x13, 0x73, 0x65, 0x32, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x44, 0x0a, 0x0c, 0x73, 0x69, 0x74, 0x5f, 0x66, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62,
	0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x69, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52,
	0x0b, 0x73, 0x69, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x4a, 0x0a, 0x0e,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x6e, 0x64,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x4d, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x47, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x70, 0x5f,
	0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x12, 0x57, 0x0a, 0x13, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x61, 0x72, 0x6d, 0x5f, 0x66,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x41, 0x72, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x11, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x72,
	0x6d, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x45, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x62, 0x6f, 0x73, 0x64,
	0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x42, 0x0a, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x49, 0x42, 0x14,
	0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6b, 0x68, 0x73, 0x73, 0x6e, 0x76, 0x2f, 0x73, 0x70, 0x6f, 0x74, 0x2d, 0x73, 0x64, 0x6b,
	0x2f, 0x70, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x6f, 0x73,
	0x64, 0x79, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bosdyn_api_mobility_command_proto_rawDescOnce sync.Once
	file_bosdyn_api_mobility_command_proto_rawDescData = file_bosdyn_api_mobility_command_proto_rawDesc
)

func file_bosdyn_api_mobility_command_proto_rawDescGZIP() []byte {
	file_bosdyn_api_mobility_command_proto_rawDescOnce.Do(func() {
		file_bosdyn_api_mobility_command_proto_rawDescData = protoimpl.X.CompressGZIP(file_bosdyn_api_mobility_command_proto_rawDescData)
	})
	return file_bosdyn_api_mobility_command_proto_rawDescData
}

var file_bosdyn_api_mobility_command_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_bosdyn_api_mobility_command_proto_goTypes = []interface{}{
	(*MobilityCommand)(nil),                // 0: bosdyn.api.MobilityCommand
	(*MobilityCommand_Request)(nil),        // 1: bosdyn.api.MobilityCommand.Request
	(*MobilityCommand_Feedback)(nil),       // 2: bosdyn.api.MobilityCommand.Feedback
	(*SE2TrajectoryCommand_Request)(nil),   // 3: bosdyn.api.SE2TrajectoryCommand.Request
	(*SE2VelocityCommand_Request)(nil),     // 4: bosdyn.api.SE2VelocityCommand.Request
	(*SitCommand_Request)(nil),             // 5: bosdyn.api.SitCommand.Request
	(*StandCommand_Request)(nil),           // 6: bosdyn.api.StandCommand.Request
	(*StanceCommand_Request)(nil),          // 7: bosdyn.api.StanceCommand.Request
	(*StopCommand_Request)(nil),            // 8: bosdyn.api.StopCommand.Request
	(*FollowArmCommand_Request)(nil),       // 9: bosdyn.api.FollowArmCommand.Request
	(*anypb.Any)(nil),                      // 10: google.protobuf.Any
	(*SE2TrajectoryCommand_Feedback)(nil),  // 11: bosdyn.api.SE2TrajectoryCommand.Feedback
	(*SE2VelocityCommand_Feedback)(nil),    // 12: bosdyn.api.SE2VelocityCommand.Feedback
	(*SitCommand_Feedback)(nil),            // 13: bosdyn.api.SitCommand.Feedback
	(*StandCommand_Feedback)(nil),          // 14: bosdyn.api.StandCommand.Feedback
	(*StanceCommand_Feedback)(nil),         // 15: bosdyn.api.StanceCommand.Feedback
	(*StopCommand_Feedback)(nil),           // 16: bosdyn.api.StopCommand.Feedback
	(*FollowArmCommand_Feedback)(nil),      // 17: bosdyn.api.FollowArmCommand.Feedback
	(RobotCommandFeedbackStatus_Status)(0), // 18: bosdyn.api.RobotCommandFeedbackStatus.Status
}
var file_bosdyn_api_mobility_command_proto_depIdxs = []int32{
	3,  // 0: bosdyn.api.MobilityCommand.Request.se2_trajectory_request:type_name -> bosdyn.api.SE2TrajectoryCommand.Request
	4,  // 1: bosdyn.api.MobilityCommand.Request.se2_velocity_request:type_name -> bosdyn.api.SE2VelocityCommand.Request
	5,  // 2: bosdyn.api.MobilityCommand.Request.sit_request:type_name -> bosdyn.api.SitCommand.Request
	6,  // 3: bosdyn.api.MobilityCommand.Request.stand_request:type_name -> bosdyn.api.StandCommand.Request
	7,  // 4: bosdyn.api.MobilityCommand.Request.stance_request:type_name -> bosdyn.api.StanceCommand.Request
	8,  // 5: bosdyn.api.MobilityCommand.Request.stop_request:type_name -> bosdyn.api.StopCommand.Request
	9,  // 6: bosdyn.api.MobilityCommand.Request.follow_arm_request:type_name -> bosdyn.api.FollowArmCommand.Request
	10, // 7: bosdyn.api.MobilityCommand.Request.params:type_name -> google.protobuf.Any
	11, // 8: bosdyn.api.MobilityCommand.Feedback.se2_trajectory_feedback:type_name -> bosdyn.api.SE2TrajectoryCommand.Feedback
	12, // 9: bosdyn.api.MobilityCommand.Feedback.se2_velocity_feedback:type_name -> bosdyn.api.SE2VelocityCommand.Feedback
	13, // 10: bosdyn.api.MobilityCommand.Feedback.sit_feedback:type_name -> bosdyn.api.SitCommand.Feedback
	14, // 11: bosdyn.api.MobilityCommand.Feedback.stand_feedback:type_name -> bosdyn.api.StandCommand.Feedback
	15, // 12: bosdyn.api.MobilityCommand.Feedback.stance_feedback:type_name -> bosdyn.api.StanceCommand.Feedback
	16, // 13: bosdyn.api.MobilityCommand.Feedback.stop_feedback:type_name -> bosdyn.api.StopCommand.Feedback
	17, // 14: bosdyn.api.MobilityCommand.Feedback.follow_arm_feedback:type_name -> bosdyn.api.FollowArmCommand.Feedback
	18, // 15: bosdyn.api.MobilityCommand.Feedback.status:type_name -> bosdyn.api.RobotCommandFeedbackStatus.Status
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_bosdyn_api_mobility_command_proto_init() }
func file_bosdyn_api_mobility_command_proto_init() {
	if File_bosdyn_api_mobility_command_proto != nil {
		return
	}
	file_bosdyn_api_basic_command_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bosdyn_api_mobility_command_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MobilityCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_mobility_command_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MobilityCommand_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_mobility_command_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MobilityCommand_Feedback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bosdyn_api_mobility_command_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*MobilityCommand_Request_Se2TrajectoryRequest)(nil),
		(*MobilityCommand_Request_Se2VelocityRequest)(nil),
		(*MobilityCommand_Request_SitRequest)(nil),
		(*MobilityCommand_Request_StandRequest)(nil),
		(*MobilityCommand_Request_StanceRequest)(nil),
		(*MobilityCommand_Request_StopRequest)(nil),
		(*MobilityCommand_Request_FollowArmRequest)(nil),
	}
	file_bosdyn_api_mobility_command_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*MobilityCommand_Feedback_Se2TrajectoryFeedback)(nil),
		(*MobilityCommand_Feedback_Se2VelocityFeedback)(nil),
		(*MobilityCommand_Feedback_SitFeedback)(nil),
		(*MobilityCommand_Feedback_StandFeedback)(nil),
		(*MobilityCommand_Feedback_StanceFeedback)(nil),
		(*MobilityCommand_Feedback_StopFeedback)(nil),
		(*MobilityCommand_Feedback_FollowArmFeedback)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bosdyn_api_mobility_command_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bosdyn_api_mobility_command_proto_goTypes,
		DependencyIndexes: file_bosdyn_api_mobility_command_proto_depIdxs,
		MessageInfos:      file_bosdyn_api_mobility_command_proto_msgTypes,
	}.Build()
	File_bosdyn_api_mobility_command_proto = out.File
	file_bosdyn_api_mobility_command_proto_rawDesc = nil
	file_bosdyn_api_mobility_command_proto_goTypes = nil
	file_bosdyn_api_mobility_command_proto_depIdxs = nil
}
