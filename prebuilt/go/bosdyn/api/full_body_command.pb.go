// Copyright (c) 2022 Boston Dynamics, Inc.  All rights reserved.
//
// Downloading, reproducing, distributing or otherwise using the SDK Software
// is subject to the terms and conditions of the Boston Dynamics Software
// Development Kit License (20191101-BDSDK-SL).

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: bosdyn/api/full_body_command.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The robot command message to specify a basic command that requires full control of the entire
// robot to be completed.
type FullBodyCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FullBodyCommand) Reset() {
	*x = FullBodyCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_full_body_command_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullBodyCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullBodyCommand) ProtoMessage() {}

func (x *FullBodyCommand) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_full_body_command_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullBodyCommand.ProtoReflect.Descriptor instead.
func (*FullBodyCommand) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_full_body_command_proto_rawDescGZIP(), []int{0}
}

// The full body request must be one of the basic command primitives.
type FullBodyCommand_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Only one full body command can be requested at a time.
	//
	// Types that are assignable to Command:
	//	*FullBodyCommand_Request_StopRequest
	//	*FullBodyCommand_Request_FreezeRequest
	//	*FullBodyCommand_Request_SelfrightRequest
	//	*FullBodyCommand_Request_SafePowerOffRequest
	//	*FullBodyCommand_Request_BatteryChangePoseRequest
	//	*FullBodyCommand_Request_PayloadEstimationRequest
	//	*FullBodyCommand_Request_ConstrainedManipulationRequest
	Command isFullBodyCommand_Request_Command `protobuf_oneof:"command"`
	// Robot specific command parameters.
	Params *anypb.Any `protobuf:"bytes,100,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *FullBodyCommand_Request) Reset() {
	*x = FullBodyCommand_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_full_body_command_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullBodyCommand_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullBodyCommand_Request) ProtoMessage() {}

func (x *FullBodyCommand_Request) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_full_body_command_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullBodyCommand_Request.ProtoReflect.Descriptor instead.
func (*FullBodyCommand_Request) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_full_body_command_proto_rawDescGZIP(), []int{0, 0}
}

func (m *FullBodyCommand_Request) GetCommand() isFullBodyCommand_Request_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (x *FullBodyCommand_Request) GetStopRequest() *StopCommand_Request {
	if x, ok := x.GetCommand().(*FullBodyCommand_Request_StopRequest); ok {
		return x.StopRequest
	}
	return nil
}

func (x *FullBodyCommand_Request) GetFreezeRequest() *FreezeCommand_Request {
	if x, ok := x.GetCommand().(*FullBodyCommand_Request_FreezeRequest); ok {
		return x.FreezeRequest
	}
	return nil
}

func (x *FullBodyCommand_Request) GetSelfrightRequest() *SelfRightCommand_Request {
	if x, ok := x.GetCommand().(*FullBodyCommand_Request_SelfrightRequest); ok {
		return x.SelfrightRequest
	}
	return nil
}

func (x *FullBodyCommand_Request) GetSafePowerOffRequest() *SafePowerOffCommand_Request {
	if x, ok := x.GetCommand().(*FullBodyCommand_Request_SafePowerOffRequest); ok {
		return x.SafePowerOffRequest
	}
	return nil
}

func (x *FullBodyCommand_Request) GetBatteryChangePoseRequest() *BatteryChangePoseCommand_Request {
	if x, ok := x.GetCommand().(*FullBodyCommand_Request_BatteryChangePoseRequest); ok {
		return x.BatteryChangePoseRequest
	}
	return nil
}

func (x *FullBodyCommand_Request) GetPayloadEstimationRequest() *PayloadEstimationCommand_Request {
	if x, ok := x.GetCommand().(*FullBodyCommand_Request_PayloadEstimationRequest); ok {
		return x.PayloadEstimationRequest
	}
	return nil
}

func (x *FullBodyCommand_Request) GetConstrainedManipulationRequest() *ConstrainedManipulationCommand_Request {
	if x, ok := x.GetCommand().(*FullBodyCommand_Request_ConstrainedManipulationRequest); ok {
		return x.ConstrainedManipulationRequest
	}
	return nil
}

func (x *FullBodyCommand_Request) GetParams() *anypb.Any {
	if x != nil {
		return x.Params
	}
	return nil
}

type isFullBodyCommand_Request_Command interface {
	isFullBodyCommand_Request_Command()
}

type FullBodyCommand_Request_StopRequest struct {
	// Command to stop the robot.
	StopRequest *StopCommand_Request `protobuf:"bytes,1,opt,name=stop_request,json=stopRequest,proto3,oneof"`
}

type FullBodyCommand_Request_FreezeRequest struct {
	// Command to freeze all joints of the robot.
	FreezeRequest *FreezeCommand_Request `protobuf:"bytes,2,opt,name=freeze_request,json=freezeRequest,proto3,oneof"`
}

type FullBodyCommand_Request_SelfrightRequest struct {
	// Command to self-right the robot to a ready position.
	SelfrightRequest *SelfRightCommand_Request `protobuf:"bytes,3,opt,name=selfright_request,json=selfrightRequest,proto3,oneof"`
}

type FullBodyCommand_Request_SafePowerOffRequest struct {
	// Command to safely power off the robot.
	SafePowerOffRequest *SafePowerOffCommand_Request `protobuf:"bytes,4,opt,name=safe_power_off_request,json=safePowerOffRequest,proto3,oneof"`
}

type FullBodyCommand_Request_BatteryChangePoseRequest struct {
	// Command to put the robot in a position to easily change the battery.
	BatteryChangePoseRequest *BatteryChangePoseCommand_Request `protobuf:"bytes,5,opt,name=battery_change_pose_request,json=batteryChangePoseRequest,proto3,oneof"`
}

type FullBodyCommand_Request_PayloadEstimationRequest struct {
	// Command to perform payload mass property estimation
	PayloadEstimationRequest *PayloadEstimationCommand_Request `protobuf:"bytes,6,opt,name=payload_estimation_request,json=payloadEstimationRequest,proto3,oneof"`
}

type FullBodyCommand_Request_ConstrainedManipulationRequest struct {
	// Command to perform full body constrained manipulation moves
	ConstrainedManipulationRequest *ConstrainedManipulationCommand_Request `protobuf:"bytes,7,opt,name=constrained_manipulation_request,json=constrainedManipulationRequest,proto3,oneof"`
}

func (*FullBodyCommand_Request_StopRequest) isFullBodyCommand_Request_Command() {}

func (*FullBodyCommand_Request_FreezeRequest) isFullBodyCommand_Request_Command() {}

func (*FullBodyCommand_Request_SelfrightRequest) isFullBodyCommand_Request_Command() {}

func (*FullBodyCommand_Request_SafePowerOffRequest) isFullBodyCommand_Request_Command() {}

func (*FullBodyCommand_Request_BatteryChangePoseRequest) isFullBodyCommand_Request_Command() {}

func (*FullBodyCommand_Request_PayloadEstimationRequest) isFullBodyCommand_Request_Command() {}

func (*FullBodyCommand_Request_ConstrainedManipulationRequest) isFullBodyCommand_Request_Command() {}

// The feedback for the fully body command that will provide information on the progress
// of the robot command.
type FullBodyCommand_Feedback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The feedback message associated with the requested command. Some commands may have
	// an empty feedback message if they do not provide any updates/progress.
	//
	// Types that are assignable to Feedback:
	//	*FullBodyCommand_Feedback_StopFeedback
	//	*FullBodyCommand_Feedback_FreezeFeedback
	//	*FullBodyCommand_Feedback_SelfrightFeedback
	//	*FullBodyCommand_Feedback_SafePowerOffFeedback
	//	*FullBodyCommand_Feedback_BatteryChangePoseFeedback
	//	*FullBodyCommand_Feedback_PayloadEstimationFeedback
	//	*FullBodyCommand_Feedback_ConstrainedManipulationFeedback
	Feedback isFullBodyCommand_Feedback_Feedback `protobuf_oneof:"feedback"`
	Status   RobotCommandFeedbackStatus_Status   `protobuf:"varint,100,opt,name=status,proto3,enum=bosdyn.api.RobotCommandFeedbackStatus_Status" json:"status,omitempty"`
}

func (x *FullBodyCommand_Feedback) Reset() {
	*x = FullBodyCommand_Feedback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_full_body_command_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullBodyCommand_Feedback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullBodyCommand_Feedback) ProtoMessage() {}

func (x *FullBodyCommand_Feedback) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_full_body_command_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullBodyCommand_Feedback.ProtoReflect.Descriptor instead.
func (*FullBodyCommand_Feedback) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_full_body_command_proto_rawDescGZIP(), []int{0, 1}
}

func (m *FullBodyCommand_Feedback) GetFeedback() isFullBodyCommand_Feedback_Feedback {
	if m != nil {
		return m.Feedback
	}
	return nil
}

func (x *FullBodyCommand_Feedback) GetStopFeedback() *StopCommand_Feedback {
	if x, ok := x.GetFeedback().(*FullBodyCommand_Feedback_StopFeedback); ok {
		return x.StopFeedback
	}
	return nil
}

func (x *FullBodyCommand_Feedback) GetFreezeFeedback() *FreezeCommand_Feedback {
	if x, ok := x.GetFeedback().(*FullBodyCommand_Feedback_FreezeFeedback); ok {
		return x.FreezeFeedback
	}
	return nil
}

func (x *FullBodyCommand_Feedback) GetSelfrightFeedback() *SelfRightCommand_Feedback {
	if x, ok := x.GetFeedback().(*FullBodyCommand_Feedback_SelfrightFeedback); ok {
		return x.SelfrightFeedback
	}
	return nil
}

func (x *FullBodyCommand_Feedback) GetSafePowerOffFeedback() *SafePowerOffCommand_Feedback {
	if x, ok := x.GetFeedback().(*FullBodyCommand_Feedback_SafePowerOffFeedback); ok {
		return x.SafePowerOffFeedback
	}
	return nil
}

func (x *FullBodyCommand_Feedback) GetBatteryChangePoseFeedback() *BatteryChangePoseCommand_Feedback {
	if x, ok := x.GetFeedback().(*FullBodyCommand_Feedback_BatteryChangePoseFeedback); ok {
		return x.BatteryChangePoseFeedback
	}
	return nil
}

func (x *FullBodyCommand_Feedback) GetPayloadEstimationFeedback() *PayloadEstimationCommand_Feedback {
	if x, ok := x.GetFeedback().(*FullBodyCommand_Feedback_PayloadEstimationFeedback); ok {
		return x.PayloadEstimationFeedback
	}
	return nil
}

func (x *FullBodyCommand_Feedback) GetConstrainedManipulationFeedback() *ConstrainedManipulationCommand_Feedback {
	if x, ok := x.GetFeedback().(*FullBodyCommand_Feedback_ConstrainedManipulationFeedback); ok {
		return x.ConstrainedManipulationFeedback
	}
	return nil
}

func (x *FullBodyCommand_Feedback) GetStatus() RobotCommandFeedbackStatus_Status {
	if x != nil {
		return x.Status
	}
	return RobotCommandFeedbackStatus_STATUS_UNKNOWN
}

type isFullBodyCommand_Feedback_Feedback interface {
	isFullBodyCommand_Feedback_Feedback()
}

type FullBodyCommand_Feedback_StopFeedback struct {
	// Feedback for the stop command request.
	StopFeedback *StopCommand_Feedback `protobuf:"bytes,1,opt,name=stop_feedback,json=stopFeedback,proto3,oneof"`
}

type FullBodyCommand_Feedback_FreezeFeedback struct {
	// Feedback for the freeze command request.
	FreezeFeedback *FreezeCommand_Feedback `protobuf:"bytes,2,opt,name=freeze_feedback,json=freezeFeedback,proto3,oneof"`
}

type FullBodyCommand_Feedback_SelfrightFeedback struct {
	// Feedback for the self-right command request.
	SelfrightFeedback *SelfRightCommand_Feedback `protobuf:"bytes,3,opt,name=selfright_feedback,json=selfrightFeedback,proto3,oneof"`
}

type FullBodyCommand_Feedback_SafePowerOffFeedback struct {
	// Feedback for the safe power off command request.
	SafePowerOffFeedback *SafePowerOffCommand_Feedback `protobuf:"bytes,4,opt,name=safe_power_off_feedback,json=safePowerOffFeedback,proto3,oneof"`
}

type FullBodyCommand_Feedback_BatteryChangePoseFeedback struct {
	// Feedback for the battery change pose command request.
	BatteryChangePoseFeedback *BatteryChangePoseCommand_Feedback `protobuf:"bytes,5,opt,name=battery_change_pose_feedback,json=batteryChangePoseFeedback,proto3,oneof"`
}

type FullBodyCommand_Feedback_PayloadEstimationFeedback struct {
	// Feedback for the payload estimation command request.
	PayloadEstimationFeedback *PayloadEstimationCommand_Feedback `protobuf:"bytes,6,opt,name=payload_estimation_feedback,json=payloadEstimationFeedback,proto3,oneof"`
}

type FullBodyCommand_Feedback_ConstrainedManipulationFeedback struct {
	// Feedback for the constrained manipulation command request
	ConstrainedManipulationFeedback *ConstrainedManipulationCommand_Feedback `protobuf:"bytes,7,opt,name=constrained_manipulation_feedback,json=constrainedManipulationFeedback,proto3,oneof"`
}

func (*FullBodyCommand_Feedback_StopFeedback) isFullBodyCommand_Feedback_Feedback() {}

func (*FullBodyCommand_Feedback_FreezeFeedback) isFullBodyCommand_Feedback_Feedback() {}

func (*FullBodyCommand_Feedback_SelfrightFeedback) isFullBodyCommand_Feedback_Feedback() {}

func (*FullBodyCommand_Feedback_SafePowerOffFeedback) isFullBodyCommand_Feedback_Feedback() {}

func (*FullBodyCommand_Feedback_BatteryChangePoseFeedback) isFullBodyCommand_Feedback_Feedback() {}

func (*FullBodyCommand_Feedback_PayloadEstimationFeedback) isFullBodyCommand_Feedback_Feedback() {}

func (*FullBodyCommand_Feedback_ConstrainedManipulationFeedback) isFullBodyCommand_Feedback_Feedback() {
}

var File_bosdyn_api_full_body_command_proto protoreflect.FileDescriptor

var file_bosdyn_api_full_body_command_proto_rawDesc = []byte{
	0x0a, 0x22, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x75, 0x6c,
	0x6c, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69,
	0x1a, 0x1e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x23, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x94, 0x0c, 0x0a, 0x0f, 0x46, 0x75, 0x6c, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x1a, 0xe6, 0x05, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x44, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x0e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x72, 0x65, 0x65,
	0x7a, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0d, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x53, 0x0a, 0x11, 0x73, 0x65, 0x6c, 0x66, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6c, 0x66, 0x52,
	0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65, 0x6c, 0x66, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5e, 0x0a, 0x16, 0x73, 0x61, 0x66, 0x65, 0x5f,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x66,
	0x66, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x13, 0x73, 0x61, 0x66, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x66, 0x66,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6d, 0x0a, 0x1b, 0x62, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x65, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62,
	0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x18, 0x62, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6c, 0x0a, 0x1a, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x6f, 0x73,
	0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45,
	0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x18, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x7e, 0x0a, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x65, 0x64, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x4d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x1e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65,
	0x64, 0x4d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x97, 0x06,
	0x0a, 0x08, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x47, 0x0a, 0x0d, 0x73, 0x74,
	0x6f, 0x70, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x74, 0x6f, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x12, 0x4d, 0x0a, 0x0f, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x5f, 0x66, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62,
	0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x48, 0x00, 0x52, 0x0e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x12, 0x56, 0x0a, 0x12, 0x73, 0x65, 0x6c, 0x66, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6c, 0x66,
	0x52, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x6c, 0x66, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x61, 0x0a, 0x17, 0x73, 0x61,
	0x66, 0x65, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x66, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x6f,
	0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x4f, 0x66, 0x66, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x14, 0x73, 0x61, 0x66, 0x65, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x4f, 0x66, 0x66, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x70, 0x0a,
	0x1c, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x70, 0x6f, 0x73, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f,
	0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x48, 0x00, 0x52, 0x19, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12,
	0x6f, 0x0a, 0x1b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x65, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x19, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x12, 0x81, 0x01, 0x0a, 0x21, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64,
	0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x62,
	0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x65, 0x64, 0x4d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x48, 0x00, 0x52, 0x1f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64,
	0x4d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x12, 0x45, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x66,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x49, 0x42, 0x14, 0x46, 0x75, 0x6c, 0x6c, 0x42,
	0x6f, 0x64, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a,
	0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x68, 0x73, 0x73,
	0x6e, 0x76, 0x2f, 0x73, 0x70, 0x6f, 0x74, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x65, 0x62,
	0x75, 0x69, 0x6c, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2f, 0x61,
	0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bosdyn_api_full_body_command_proto_rawDescOnce sync.Once
	file_bosdyn_api_full_body_command_proto_rawDescData = file_bosdyn_api_full_body_command_proto_rawDesc
)

func file_bosdyn_api_full_body_command_proto_rawDescGZIP() []byte {
	file_bosdyn_api_full_body_command_proto_rawDescOnce.Do(func() {
		file_bosdyn_api_full_body_command_proto_rawDescData = protoimpl.X.CompressGZIP(file_bosdyn_api_full_body_command_proto_rawDescData)
	})
	return file_bosdyn_api_full_body_command_proto_rawDescData
}

var file_bosdyn_api_full_body_command_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_bosdyn_api_full_body_command_proto_goTypes = []interface{}{
	(*FullBodyCommand)(nil),                         // 0: bosdyn.api.FullBodyCommand
	(*FullBodyCommand_Request)(nil),                 // 1: bosdyn.api.FullBodyCommand.Request
	(*FullBodyCommand_Feedback)(nil),                // 2: bosdyn.api.FullBodyCommand.Feedback
	(*StopCommand_Request)(nil),                     // 3: bosdyn.api.StopCommand.Request
	(*FreezeCommand_Request)(nil),                   // 4: bosdyn.api.FreezeCommand.Request
	(*SelfRightCommand_Request)(nil),                // 5: bosdyn.api.SelfRightCommand.Request
	(*SafePowerOffCommand_Request)(nil),             // 6: bosdyn.api.SafePowerOffCommand.Request
	(*BatteryChangePoseCommand_Request)(nil),        // 7: bosdyn.api.BatteryChangePoseCommand.Request
	(*PayloadEstimationCommand_Request)(nil),        // 8: bosdyn.api.PayloadEstimationCommand.Request
	(*ConstrainedManipulationCommand_Request)(nil),  // 9: bosdyn.api.ConstrainedManipulationCommand.Request
	(*anypb.Any)(nil),                               // 10: google.protobuf.Any
	(*StopCommand_Feedback)(nil),                    // 11: bosdyn.api.StopCommand.Feedback
	(*FreezeCommand_Feedback)(nil),                  // 12: bosdyn.api.FreezeCommand.Feedback
	(*SelfRightCommand_Feedback)(nil),               // 13: bosdyn.api.SelfRightCommand.Feedback
	(*SafePowerOffCommand_Feedback)(nil),            // 14: bosdyn.api.SafePowerOffCommand.Feedback
	(*BatteryChangePoseCommand_Feedback)(nil),       // 15: bosdyn.api.BatteryChangePoseCommand.Feedback
	(*PayloadEstimationCommand_Feedback)(nil),       // 16: bosdyn.api.PayloadEstimationCommand.Feedback
	(*ConstrainedManipulationCommand_Feedback)(nil), // 17: bosdyn.api.ConstrainedManipulationCommand.Feedback
	(RobotCommandFeedbackStatus_Status)(0),          // 18: bosdyn.api.RobotCommandFeedbackStatus.Status
}
var file_bosdyn_api_full_body_command_proto_depIdxs = []int32{
	3,  // 0: bosdyn.api.FullBodyCommand.Request.stop_request:type_name -> bosdyn.api.StopCommand.Request
	4,  // 1: bosdyn.api.FullBodyCommand.Request.freeze_request:type_name -> bosdyn.api.FreezeCommand.Request
	5,  // 2: bosdyn.api.FullBodyCommand.Request.selfright_request:type_name -> bosdyn.api.SelfRightCommand.Request
	6,  // 3: bosdyn.api.FullBodyCommand.Request.safe_power_off_request:type_name -> bosdyn.api.SafePowerOffCommand.Request
	7,  // 4: bosdyn.api.FullBodyCommand.Request.battery_change_pose_request:type_name -> bosdyn.api.BatteryChangePoseCommand.Request
	8,  // 5: bosdyn.api.FullBodyCommand.Request.payload_estimation_request:type_name -> bosdyn.api.PayloadEstimationCommand.Request
	9,  // 6: bosdyn.api.FullBodyCommand.Request.constrained_manipulation_request:type_name -> bosdyn.api.ConstrainedManipulationCommand.Request
	10, // 7: bosdyn.api.FullBodyCommand.Request.params:type_name -> google.protobuf.Any
	11, // 8: bosdyn.api.FullBodyCommand.Feedback.stop_feedback:type_name -> bosdyn.api.StopCommand.Feedback
	12, // 9: bosdyn.api.FullBodyCommand.Feedback.freeze_feedback:type_name -> bosdyn.api.FreezeCommand.Feedback
	13, // 10: bosdyn.api.FullBodyCommand.Feedback.selfright_feedback:type_name -> bosdyn.api.SelfRightCommand.Feedback
	14, // 11: bosdyn.api.FullBodyCommand.Feedback.safe_power_off_feedback:type_name -> bosdyn.api.SafePowerOffCommand.Feedback
	15, // 12: bosdyn.api.FullBodyCommand.Feedback.battery_change_pose_feedback:type_name -> bosdyn.api.BatteryChangePoseCommand.Feedback
	16, // 13: bosdyn.api.FullBodyCommand.Feedback.payload_estimation_feedback:type_name -> bosdyn.api.PayloadEstimationCommand.Feedback
	17, // 14: bosdyn.api.FullBodyCommand.Feedback.constrained_manipulation_feedback:type_name -> bosdyn.api.ConstrainedManipulationCommand.Feedback
	18, // 15: bosdyn.api.FullBodyCommand.Feedback.status:type_name -> bosdyn.api.RobotCommandFeedbackStatus.Status
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_bosdyn_api_full_body_command_proto_init() }
func file_bosdyn_api_full_body_command_proto_init() {
	if File_bosdyn_api_full_body_command_proto != nil {
		return
	}
	file_bosdyn_api_basic_command_proto_init()
	file_bosdyn_api_payload_estimation_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bosdyn_api_full_body_command_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullBodyCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_full_body_command_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullBodyCommand_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_full_body_command_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullBodyCommand_Feedback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bosdyn_api_full_body_command_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*FullBodyCommand_Request_StopRequest)(nil),
		(*FullBodyCommand_Request_FreezeRequest)(nil),
		(*FullBodyCommand_Request_SelfrightRequest)(nil),
		(*FullBodyCommand_Request_SafePowerOffRequest)(nil),
		(*FullBodyCommand_Request_BatteryChangePoseRequest)(nil),
		(*FullBodyCommand_Request_PayloadEstimationRequest)(nil),
		(*FullBodyCommand_Request_ConstrainedManipulationRequest)(nil),
	}
	file_bosdyn_api_full_body_command_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*FullBodyCommand_Feedback_StopFeedback)(nil),
		(*FullBodyCommand_Feedback_FreezeFeedback)(nil),
		(*FullBodyCommand_Feedback_SelfrightFeedback)(nil),
		(*FullBodyCommand_Feedback_SafePowerOffFeedback)(nil),
		(*FullBodyCommand_Feedback_BatteryChangePoseFeedback)(nil),
		(*FullBodyCommand_Feedback_PayloadEstimationFeedback)(nil),
		(*FullBodyCommand_Feedback_ConstrainedManipulationFeedback)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bosdyn_api_full_body_command_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bosdyn_api_full_body_command_proto_goTypes,
		DependencyIndexes: file_bosdyn_api_full_body_command_proto_depIdxs,
		MessageInfos:      file_bosdyn_api_full_body_command_proto_msgTypes,
	}.Build()
	File_bosdyn_api_full_body_command_proto = out.File
	file_bosdyn_api_full_body_command_proto_rawDesc = nil
	file_bosdyn_api_full_body_command_proto_goTypes = nil
	file_bosdyn_api_full_body_command_proto_depIdxs = nil
}
