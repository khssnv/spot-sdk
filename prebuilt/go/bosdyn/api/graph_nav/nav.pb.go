// Copyright (c) 2022 Boston Dynamics, Inc.  All rights reserved.
//
// Downloading, reproducing, distributing or otherwise using the SDK Software
// is subject to the terms and conditions of the Boston Dynamics Software
// Development Kit License (20191101-BDSDK-SL).

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: bosdyn/api/graph_nav/nav.proto

package graph_nav

import (
	api "github.com/khssnv/spot-sdk/prebuilt/go/bosdyn/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Route that the robot should follow or is currently following.
type Route struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Ordered list of waypoints to traverse, starting from index 0.
	WaypointId []string `protobuf:"bytes,2,rep,name=waypoint_id,json=waypointId,proto3" json:"waypoint_id,omitempty"`
	// Ordered list of edges to traverse between those waypoints.
	EdgeId []*Edge_Id `protobuf:"bytes,3,rep,name=edge_id,json=edgeId,proto3" json:"edge_id,omitempty"`
}

func (x *Route) Reset() {
	*x = Route{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_graph_nav_nav_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_graph_nav_nav_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_graph_nav_nav_proto_rawDescGZIP(), []int{0}
}

func (x *Route) GetWaypointId() []string {
	if x != nil {
		return x.WaypointId
	}
	return nil
}

func (x *Route) GetEdgeId() []*Edge_Id {
	if x != nil {
		return x.EdgeId
	}
	return nil
}

// The localization state of the robot. This reports the pose of the robot relative
// to a particular waypoint on the graph nav map.
type Localization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Waypoint this localization is relative to.
	WaypointId string `protobuf:"bytes,1,opt,name=waypoint_id,json=waypointId,proto3" json:"waypoint_id,omitempty"`
	// Pose of body in waypoint frame.
	WaypointTformBody *api.SE3Pose `protobuf:"bytes,2,opt,name=waypoint_tform_body,json=waypointTformBody,proto3" json:"waypoint_tform_body,omitempty"`
	// Pose of body in a common reference frame. The common reference frame defaults to the starting
	// fiducial frame, but can be changed. See Anchoring for more info.
	SeedTformBody *api.SE3Pose `protobuf:"bytes,5,opt,name=seed_tform_body,json=seedTformBody,proto3" json:"seed_tform_body,omitempty"`
	// Time (in robot time basis) that this localization was valid.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Localization) Reset() {
	*x = Localization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_graph_nav_nav_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Localization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Localization) ProtoMessage() {}

func (x *Localization) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_graph_nav_nav_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Localization.ProtoReflect.Descriptor instead.
func (*Localization) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_graph_nav_nav_proto_rawDescGZIP(), []int{1}
}

func (x *Localization) GetWaypointId() string {
	if x != nil {
		return x.WaypointId
	}
	return ""
}

func (x *Localization) GetWaypointTformBody() *api.SE3Pose {
	if x != nil {
		return x.WaypointTformBody
	}
	return nil
}

func (x *Localization) GetSeedTformBody() *api.SE3Pose {
	if x != nil {
		return x.SeedTformBody
	}
	return nil
}

func (x *Localization) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_bosdyn_api_graph_nav_nav_proto protoreflect.FileDescriptor

var file_bosdyn_api_graph_nav_nav_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x5f, 0x6e, 0x61, 0x76, 0x2f, 0x6e, 0x61, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x14, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x5f, 0x6e, 0x61, 0x76, 0x1a, 0x1e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x6e, 0x61, 0x76, 0x2f, 0x6d, 0x61, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x60, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x77,
	0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x77, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x07,
	0x65, 0x64, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x5f, 0x6e, 0x61, 0x76, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x06, 0x65, 0x64,
	0x67, 0x65, 0x49, 0x64, 0x22, 0xeb, 0x01, 0x0a, 0x0c, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x61, 0x79, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x13, 0x77, 0x61, 0x79, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x45, 0x33, 0x50, 0x6f, 0x73, 0x65, 0x52, 0x11, 0x77, 0x61, 0x79, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x54, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x3b, 0x0a, 0x0f, 0x73,
	0x65, 0x65, 0x64, 0x5f, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x45, 0x33, 0x50, 0x6f, 0x73, 0x65, 0x52, 0x0d, 0x73, 0x65, 0x65, 0x64, 0x54,
	0x66, 0x6f, 0x72, 0x6d, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x47, 0x42, 0x08, 0x4e, 0x61, 0x76, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x3b,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x68, 0x73, 0x73, 0x6e,
	0x76, 0x2f, 0x73, 0x70, 0x6f, 0x74, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x65, 0x62, 0x75,
	0x69, 0x6c, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x6e, 0x61, 0x76, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_bosdyn_api_graph_nav_nav_proto_rawDescOnce sync.Once
	file_bosdyn_api_graph_nav_nav_proto_rawDescData = file_bosdyn_api_graph_nav_nav_proto_rawDesc
)

func file_bosdyn_api_graph_nav_nav_proto_rawDescGZIP() []byte {
	file_bosdyn_api_graph_nav_nav_proto_rawDescOnce.Do(func() {
		file_bosdyn_api_graph_nav_nav_proto_rawDescData = protoimpl.X.CompressGZIP(file_bosdyn_api_graph_nav_nav_proto_rawDescData)
	})
	return file_bosdyn_api_graph_nav_nav_proto_rawDescData
}

var file_bosdyn_api_graph_nav_nav_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_bosdyn_api_graph_nav_nav_proto_goTypes = []interface{}{
	(*Route)(nil),                 // 0: bosdyn.api.graph_nav.Route
	(*Localization)(nil),          // 1: bosdyn.api.graph_nav.Localization
	(*Edge_Id)(nil),               // 2: bosdyn.api.graph_nav.Edge.Id
	(*api.SE3Pose)(nil),           // 3: bosdyn.api.SE3Pose
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_bosdyn_api_graph_nav_nav_proto_depIdxs = []int32{
	2, // 0: bosdyn.api.graph_nav.Route.edge_id:type_name -> bosdyn.api.graph_nav.Edge.Id
	3, // 1: bosdyn.api.graph_nav.Localization.waypoint_tform_body:type_name -> bosdyn.api.SE3Pose
	3, // 2: bosdyn.api.graph_nav.Localization.seed_tform_body:type_name -> bosdyn.api.SE3Pose
	4, // 3: bosdyn.api.graph_nav.Localization.timestamp:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_bosdyn_api_graph_nav_nav_proto_init() }
func file_bosdyn_api_graph_nav_nav_proto_init() {
	if File_bosdyn_api_graph_nav_nav_proto != nil {
		return
	}
	file_bosdyn_api_graph_nav_map_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bosdyn_api_graph_nav_nav_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_graph_nav_nav_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Localization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bosdyn_api_graph_nav_nav_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bosdyn_api_graph_nav_nav_proto_goTypes,
		DependencyIndexes: file_bosdyn_api_graph_nav_nav_proto_depIdxs,
		MessageInfos:      file_bosdyn_api_graph_nav_nav_proto_msgTypes,
	}.Build()
	File_bosdyn_api_graph_nav_nav_proto = out.File
	file_bosdyn_api_graph_nav_nav_proto_rawDesc = nil
	file_bosdyn_api_graph_nav_nav_proto_goTypes = nil
	file_bosdyn_api_graph_nav_nav_proto_depIdxs = nil
}
