// Copyright (c) 2022 Boston Dynamics, Inc.  All rights reserved.
//
// Downloading, reproducing, distributing or otherwise using the SDK Software
// is subject to the terms and conditions of the Boston Dynamics Software
// Development Kit License (20191101-BDSDK-SL).

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: bosdyn/api/payload_registration.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterPayloadResponse_Status int32

const (
	// UNKNOWN should never be used. An internal PayloadRegistrationService issue has happened if UNKNOWN is set.
	RegisterPayloadResponse_STATUS_UNKNOWN RegisterPayloadResponse_Status = 0
	// Success.  The new service record is available.
	RegisterPayloadResponse_STATUS_OK RegisterPayloadResponse_Status = 1
	// RegisterPayload failed because a payload with this GUID already exists.
	RegisterPayloadResponse_STATUS_ALREADY_EXISTS RegisterPayloadResponse_Status = 2
)

// Enum value maps for RegisterPayloadResponse_Status.
var (
	RegisterPayloadResponse_Status_name = map[int32]string{
		0: "STATUS_UNKNOWN",
		1: "STATUS_OK",
		2: "STATUS_ALREADY_EXISTS",
	}
	RegisterPayloadResponse_Status_value = map[string]int32{
		"STATUS_UNKNOWN":        0,
		"STATUS_OK":             1,
		"STATUS_ALREADY_EXISTS": 2,
	}
)

func (x RegisterPayloadResponse_Status) Enum() *RegisterPayloadResponse_Status {
	p := new(RegisterPayloadResponse_Status)
	*p = x
	return p
}

func (x RegisterPayloadResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegisterPayloadResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_bosdyn_api_payload_registration_proto_enumTypes[0].Descriptor()
}

func (RegisterPayloadResponse_Status) Type() protoreflect.EnumType {
	return &file_bosdyn_api_payload_registration_proto_enumTypes[0]
}

func (x RegisterPayloadResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegisterPayloadResponse_Status.Descriptor instead.
func (RegisterPayloadResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_bosdyn_api_payload_registration_proto_rawDescGZIP(), []int{1, 0}
}

type UpdatePayloadVersionResponse_Status int32

const (
	// UNKNOWN should never be used. An internal PayloadRegistrationService issue has happened if UNKNOWN is set.
	UpdatePayloadVersionResponse_STATUS_UNKNOWN UpdatePayloadVersionResponse_Status = 0
	// Success.  The payload version has been updated.
	UpdatePayloadVersionResponse_STATUS_OK UpdatePayloadVersionResponse_Status = 1
	// UpdatePayload failed because a payload with this GUID does not yet exist.
	UpdatePayloadVersionResponse_STATUS_DOES_NOT_EXIST UpdatePayloadVersionResponse_Status = 2
	// UpdatePayload failed because the paylod guid & secret do not match any registered payloads.
	UpdatePayloadVersionResponse_STATUS_INVALID_CREDENTIALS UpdatePayloadVersionResponse_Status = 3
)

// Enum value maps for UpdatePayloadVersionResponse_Status.
var (
	UpdatePayloadVersionResponse_Status_name = map[int32]string{
		0: "STATUS_UNKNOWN",
		1: "STATUS_OK",
		2: "STATUS_DOES_NOT_EXIST",
		3: "STATUS_INVALID_CREDENTIALS",
	}
	UpdatePayloadVersionResponse_Status_value = map[string]int32{
		"STATUS_UNKNOWN":             0,
		"STATUS_OK":                  1,
		"STATUS_DOES_NOT_EXIST":      2,
		"STATUS_INVALID_CREDENTIALS": 3,
	}
)

func (x UpdatePayloadVersionResponse_Status) Enum() *UpdatePayloadVersionResponse_Status {
	p := new(UpdatePayloadVersionResponse_Status)
	*p = x
	return p
}

func (x UpdatePayloadVersionResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdatePayloadVersionResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_bosdyn_api_payload_registration_proto_enumTypes[1].Descriptor()
}

func (UpdatePayloadVersionResponse_Status) Type() protoreflect.EnumType {
	return &file_bosdyn_api_payload_registration_proto_enumTypes[1]
}

func (x UpdatePayloadVersionResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdatePayloadVersionResponse_Status.Descriptor instead.
func (UpdatePayloadVersionResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_bosdyn_api_payload_registration_proto_rawDescGZIP(), []int{3, 0}
}

type GetPayloadAuthTokenResponse_Status int32

const (
	// UNKNOWN should never be used. An internal PayloadRegistrationService issue has happened if UNKNOWN is set.
	GetPayloadAuthTokenResponse_STATUS_UNKNOWN GetPayloadAuthTokenResponse_Status = 0
	// Success.  The token is available.
	GetPayloadAuthTokenResponse_STATUS_OK GetPayloadAuthTokenResponse_Status = 1
	// GetPayloadAuthToken failed because the paylod guid & secret do not match any registered payloads.
	GetPayloadAuthTokenResponse_STATUS_INVALID_CREDENTIALS GetPayloadAuthTokenResponse_Status = 2
	// GetPayloadAuthToken failed because the paylod has not been authorized by an admin.
	GetPayloadAuthTokenResponse_STATUS_PAYLOAD_NOT_AUTHORIZED GetPayloadAuthTokenResponse_Status = 3
)

// Enum value maps for GetPayloadAuthTokenResponse_Status.
var (
	GetPayloadAuthTokenResponse_Status_name = map[int32]string{
		0: "STATUS_UNKNOWN",
		1: "STATUS_OK",
		2: "STATUS_INVALID_CREDENTIALS",
		3: "STATUS_PAYLOAD_NOT_AUTHORIZED",
	}
	GetPayloadAuthTokenResponse_Status_value = map[string]int32{
		"STATUS_UNKNOWN":                0,
		"STATUS_OK":                     1,
		"STATUS_INVALID_CREDENTIALS":    2,
		"STATUS_PAYLOAD_NOT_AUTHORIZED": 3,
	}
)

func (x GetPayloadAuthTokenResponse_Status) Enum() *GetPayloadAuthTokenResponse_Status {
	p := new(GetPayloadAuthTokenResponse_Status)
	*p = x
	return p
}

func (x GetPayloadAuthTokenResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetPayloadAuthTokenResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_bosdyn_api_payload_registration_proto_enumTypes[2].Descriptor()
}

func (GetPayloadAuthTokenResponse_Status) Type() protoreflect.EnumType {
	return &file_bosdyn_api_payload_registration_proto_enumTypes[2]
}

func (x GetPayloadAuthTokenResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetPayloadAuthTokenResponse_Status.Descriptor instead.
func (GetPayloadAuthTokenResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_bosdyn_api_payload_registration_proto_rawDescGZIP(), []int{5, 0}
}

type UpdatePayloadAttachedRequest_Request int32

const (
	UpdatePayloadAttachedRequest_REQUEST_UNKNOWN UpdatePayloadAttachedRequest_Request = 0
	UpdatePayloadAttachedRequest_REQUEST_ATTACH  UpdatePayloadAttachedRequest_Request = 1
	UpdatePayloadAttachedRequest_REQUEST_DETACH  UpdatePayloadAttachedRequest_Request = 2
)

// Enum value maps for UpdatePayloadAttachedRequest_Request.
var (
	UpdatePayloadAttachedRequest_Request_name = map[int32]string{
		0: "REQUEST_UNKNOWN",
		1: "REQUEST_ATTACH",
		2: "REQUEST_DETACH",
	}
	UpdatePayloadAttachedRequest_Request_value = map[string]int32{
		"REQUEST_UNKNOWN": 0,
		"REQUEST_ATTACH":  1,
		"REQUEST_DETACH":  2,
	}
)

func (x UpdatePayloadAttachedRequest_Request) Enum() *UpdatePayloadAttachedRequest_Request {
	p := new(UpdatePayloadAttachedRequest_Request)
	*p = x
	return p
}

func (x UpdatePayloadAttachedRequest_Request) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdatePayloadAttachedRequest_Request) Descriptor() protoreflect.EnumDescriptor {
	return file_bosdyn_api_payload_registration_proto_enumTypes[3].Descriptor()
}

func (UpdatePayloadAttachedRequest_Request) Type() protoreflect.EnumType {
	return &file_bosdyn_api_payload_registration_proto_enumTypes[3]
}

func (x UpdatePayloadAttachedRequest_Request) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdatePayloadAttachedRequest_Request.Descriptor instead.
func (UpdatePayloadAttachedRequest_Request) EnumDescriptor() ([]byte, []int) {
	return file_bosdyn_api_payload_registration_proto_rawDescGZIP(), []int{6, 0}
}

type UpdatePayloadAttachedResponse_Status int32

const (
	// UNKNOWN should never be used. An internal PayloadRegistrationService issue has happened if UNKNOWN is set.
	UpdatePayloadAttachedResponse_STATUS_UNKNOWN UpdatePayloadAttachedResponse_Status = 0
	// Success.  The payload version has been updated.
	UpdatePayloadAttachedResponse_STATUS_OK UpdatePayloadAttachedResponse_Status = 1
	// UpdatePayloadAttached failed because a payload with this GUID does not yet exist.
	UpdatePayloadAttachedResponse_STATUS_DOES_NOT_EXIST UpdatePayloadAttachedResponse_Status = 2
	// UpdatePayloadAttached failed because the paylod guid & secret do not match any registered payloads.
	UpdatePayloadAttachedResponse_STATUS_INVALID_CREDENTIALS UpdatePayloadAttachedResponse_Status = 3
	// UpdatePayloadAttached failed because the requested payload has not yet been authorized.
	// Authorize the payload in the webserver first, then try again.
	UpdatePayloadAttachedResponse_STATUS_PAYLOAD_NOT_AUTHORIZED UpdatePayloadAttachedResponse_Status = 4
)

// Enum value maps for UpdatePayloadAttachedResponse_Status.
var (
	UpdatePayloadAttachedResponse_Status_name = map[int32]string{
		0: "STATUS_UNKNOWN",
		1: "STATUS_OK",
		2: "STATUS_DOES_NOT_EXIST",
		3: "STATUS_INVALID_CREDENTIALS",
		4: "STATUS_PAYLOAD_NOT_AUTHORIZED",
	}
	UpdatePayloadAttachedResponse_Status_value = map[string]int32{
		"STATUS_UNKNOWN":                0,
		"STATUS_OK":                     1,
		"STATUS_DOES_NOT_EXIST":         2,
		"STATUS_INVALID_CREDENTIALS":    3,
		"STATUS_PAYLOAD_NOT_AUTHORIZED": 4,
	}
)

func (x UpdatePayloadAttachedResponse_Status) Enum() *UpdatePayloadAttachedResponse_Status {
	p := new(UpdatePayloadAttachedResponse_Status)
	*p = x
	return p
}

func (x UpdatePayloadAttachedResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdatePayloadAttachedResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_bosdyn_api_payload_registration_proto_enumTypes[4].Descriptor()
}

func (UpdatePayloadAttachedResponse_Status) Type() protoreflect.EnumType {
	return &file_bosdyn_api_payload_registration_proto_enumTypes[4]
}

func (x UpdatePayloadAttachedResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdatePayloadAttachedResponse_Status.Descriptor instead.
func (UpdatePayloadAttachedResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_bosdyn_api_payload_registration_proto_rawDescGZIP(), []int{7, 0}
}

// The RegisterPayload request message contains the payload information and secret to be
// able to register it to the directory.
type RegisterPayloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common request header.
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// The payload to register, which must have, at minimum, GUID specified correctly.
	// The admin console can be used to verify that the payload definition is valid
	// after registration.
	Payload *Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	// A private string provided by the payload to verify identity for auth.
	PayloadSecret string `protobuf:"bytes,3,opt,name=payload_secret,json=payloadSecret,proto3" json:"payload_secret,omitempty"`
}

func (x *RegisterPayloadRequest) Reset() {
	*x = RegisterPayloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_payload_registration_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterPayloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPayloadRequest) ProtoMessage() {}

func (x *RegisterPayloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_payload_registration_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPayloadRequest.ProtoReflect.Descriptor instead.
func (*RegisterPayloadRequest) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_payload_registration_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterPayloadRequest) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *RegisterPayloadRequest) GetPayload() *Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *RegisterPayloadRequest) GetPayloadSecret() string {
	if x != nil {
		return x.PayloadSecret
	}
	return ""
}

// The RegisterPayload response message contains the status of whether the payload was successfully
// registered to the directory.
type RegisterPayloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common response header.
	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Return status for the request.
	Status RegisterPayloadResponse_Status `protobuf:"varint,2,opt,name=status,proto3,enum=bosdyn.api.RegisterPayloadResponse_Status" json:"status,omitempty"`
}

func (x *RegisterPayloadResponse) Reset() {
	*x = RegisterPayloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_payload_registration_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterPayloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPayloadResponse) ProtoMessage() {}

func (x *RegisterPayloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_payload_registration_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPayloadResponse.ProtoReflect.Descriptor instead.
func (*RegisterPayloadResponse) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_payload_registration_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterPayloadResponse) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *RegisterPayloadResponse) GetStatus() RegisterPayloadResponse_Status {
	if x != nil {
		return x.Status
	}
	return RegisterPayloadResponse_STATUS_UNKNOWN
}

// Update the payload definition of the payload with matching GUID. The existing payload must
// have a secret set and the request must provide the secret for access.
// GUID and is_authorized fields are immutable and cannot be updated.
type UpdatePayloadVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common request header.
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Payload credentials.
	PayloadCredentials *PayloadCredentials `protobuf:"bytes,5,opt,name=payload_credentials,json=payloadCredentials,proto3" json:"payload_credentials,omitempty"`
	// The GUID of the payload to be updated.
	//
	// Deprecated: Do not use.
	PayloadGuid string `protobuf:"bytes,2,opt,name=payload_guid,json=payloadGuid,proto3" json:"payload_guid,omitempty"`
	// The payload secret for the specified payload.
	//
	// Deprecated: Do not use.
	PayloadSecret string `protobuf:"bytes,3,opt,name=payload_secret,json=payloadSecret,proto3" json:"payload_secret,omitempty"`
	// The new software version that the payload is being updated to.
	UpdatedVersion *SoftwareVersion `protobuf:"bytes,4,opt,name=updated_version,json=updatedVersion,proto3" json:"updated_version,omitempty"`
}

func (x *UpdatePayloadVersionRequest) Reset() {
	*x = UpdatePayloadVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_payload_registration_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePayloadVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePayloadVersionRequest) ProtoMessage() {}

func (x *UpdatePayloadVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_payload_registration_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePayloadVersionRequest.ProtoReflect.Descriptor instead.
func (*UpdatePayloadVersionRequest) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_payload_registration_proto_rawDescGZIP(), []int{2}
}

func (x *UpdatePayloadVersionRequest) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *UpdatePayloadVersionRequest) GetPayloadCredentials() *PayloadCredentials {
	if x != nil {
		return x.PayloadCredentials
	}
	return nil
}

// Deprecated: Do not use.
func (x *UpdatePayloadVersionRequest) GetPayloadGuid() string {
	if x != nil {
		return x.PayloadGuid
	}
	return ""
}

// Deprecated: Do not use.
func (x *UpdatePayloadVersionRequest) GetPayloadSecret() string {
	if x != nil {
		return x.PayloadSecret
	}
	return ""
}

func (x *UpdatePayloadVersionRequest) GetUpdatedVersion() *SoftwareVersion {
	if x != nil {
		return x.UpdatedVersion
	}
	return nil
}

// The UpdatePayloadVersion response message contains the status of whether the update was successful.
type UpdatePayloadVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common response header.
	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Return status for the request.
	Status UpdatePayloadVersionResponse_Status `protobuf:"varint,2,opt,name=status,proto3,enum=bosdyn.api.UpdatePayloadVersionResponse_Status" json:"status,omitempty"`
}

func (x *UpdatePayloadVersionResponse) Reset() {
	*x = UpdatePayloadVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_payload_registration_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePayloadVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePayloadVersionResponse) ProtoMessage() {}

func (x *UpdatePayloadVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_payload_registration_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePayloadVersionResponse.ProtoReflect.Descriptor instead.
func (*UpdatePayloadVersionResponse) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_payload_registration_proto_rawDescGZIP(), []int{3}
}

func (x *UpdatePayloadVersionResponse) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *UpdatePayloadVersionResponse) GetStatus() UpdatePayloadVersionResponse_Status {
	if x != nil {
		return x.Status
	}
	return UpdatePayloadVersionResponse_STATUS_UNKNOWN
}

// Request a user token from the robot
// A token will only be provided after the registered payload has been enabled by an admin.
// The returned user token will have limited access to the services necessary for a simple payload.
type GetPayloadAuthTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common request header.
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Payload credentials.
	PayloadCredentials *PayloadCredentials `protobuf:"bytes,4,opt,name=payload_credentials,json=payloadCredentials,proto3" json:"payload_credentials,omitempty"`
	// The GUID to identify which payload to get the auth token for.
	//
	// Deprecated: Do not use.
	PayloadGuid string `protobuf:"bytes,2,opt,name=payload_guid,json=payloadGuid,proto3" json:"payload_guid,omitempty"`
	// The payload secret for the specified payload.
	//
	// Deprecated: Do not use.
	PayloadSecret string `protobuf:"bytes,3,opt,name=payload_secret,json=payloadSecret,proto3" json:"payload_secret,omitempty"`
}

func (x *GetPayloadAuthTokenRequest) Reset() {
	*x = GetPayloadAuthTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_payload_registration_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayloadAuthTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayloadAuthTokenRequest) ProtoMessage() {}

func (x *GetPayloadAuthTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_payload_registration_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayloadAuthTokenRequest.ProtoReflect.Descriptor instead.
func (*GetPayloadAuthTokenRequest) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_payload_registration_proto_rawDescGZIP(), []int{4}
}

func (x *GetPayloadAuthTokenRequest) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetPayloadAuthTokenRequest) GetPayloadCredentials() *PayloadCredentials {
	if x != nil {
		return x.PayloadCredentials
	}
	return nil
}

// Deprecated: Do not use.
func (x *GetPayloadAuthTokenRequest) GetPayloadGuid() string {
	if x != nil {
		return x.PayloadGuid
	}
	return ""
}

// Deprecated: Do not use.
func (x *GetPayloadAuthTokenRequest) GetPayloadSecret() string {
	if x != nil {
		return x.PayloadSecret
	}
	return ""
}

// The GetPayloadAuthToken response message that returns the token for the payload.
type GetPayloadAuthTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common response header.
	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Return status for the request.
	Status GetPayloadAuthTokenResponse_Status `protobuf:"varint,2,opt,name=status,proto3,enum=bosdyn.api.GetPayloadAuthTokenResponse_Status" json:"status,omitempty"`
	// A limited-access user token provided on successful payload registration
	Token string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetPayloadAuthTokenResponse) Reset() {
	*x = GetPayloadAuthTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_payload_registration_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayloadAuthTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayloadAuthTokenResponse) ProtoMessage() {}

func (x *GetPayloadAuthTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_payload_registration_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayloadAuthTokenResponse.ProtoReflect.Descriptor instead.
func (*GetPayloadAuthTokenResponse) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_payload_registration_proto_rawDescGZIP(), []int{5}
}

func (x *GetPayloadAuthTokenResponse) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetPayloadAuthTokenResponse) GetStatus() GetPayloadAuthTokenResponse_Status {
	if x != nil {
		return x.Status
	}
	return GetPayloadAuthTokenResponse_STATUS_UNKNOWN
}

func (x *GetPayloadAuthTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// Attach/detach the payload with the matching GUID. The existing payload must
// have a secret set and the request must provide the secret for access.
// GUID is immutable and cannot be updated.
type UpdatePayloadAttachedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common request header.
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Payload credentials, used to identify the payload and authorize the changes.
	PayloadCredentials *PayloadCredentials `protobuf:"bytes,2,opt,name=payload_credentials,json=payloadCredentials,proto3" json:"payload_credentials,omitempty"`
	// Attach or detach the payload.
	Request UpdatePayloadAttachedRequest_Request `protobuf:"varint,3,opt,name=request,proto3,enum=bosdyn.api.UpdatePayloadAttachedRequest_Request" json:"request,omitempty"`
}

func (x *UpdatePayloadAttachedRequest) Reset() {
	*x = UpdatePayloadAttachedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_payload_registration_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePayloadAttachedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePayloadAttachedRequest) ProtoMessage() {}

func (x *UpdatePayloadAttachedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_payload_registration_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePayloadAttachedRequest.ProtoReflect.Descriptor instead.
func (*UpdatePayloadAttachedRequest) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_payload_registration_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatePayloadAttachedRequest) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *UpdatePayloadAttachedRequest) GetPayloadCredentials() *PayloadCredentials {
	if x != nil {
		return x.PayloadCredentials
	}
	return nil
}

func (x *UpdatePayloadAttachedRequest) GetRequest() UpdatePayloadAttachedRequest_Request {
	if x != nil {
		return x.Request
	}
	return UpdatePayloadAttachedRequest_REQUEST_UNKNOWN
}

// The UpdatePayloadAttached response message contains the status of whether the update was successful.
type UpdatePayloadAttachedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common response header.
	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Return status for the request.
	Status UpdatePayloadAttachedResponse_Status `protobuf:"varint,2,opt,name=status,proto3,enum=bosdyn.api.UpdatePayloadAttachedResponse_Status" json:"status,omitempty"`
}

func (x *UpdatePayloadAttachedResponse) Reset() {
	*x = UpdatePayloadAttachedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_payload_registration_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePayloadAttachedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePayloadAttachedResponse) ProtoMessage() {}

func (x *UpdatePayloadAttachedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_payload_registration_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePayloadAttachedResponse.ProtoReflect.Descriptor instead.
func (*UpdatePayloadAttachedResponse) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_payload_registration_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePayloadAttachedResponse) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *UpdatePayloadAttachedResponse) GetStatus() UpdatePayloadAttachedResponse_Status {
	if x != nil {
		return x.Status
	}
	return UpdatePayloadAttachedResponse_STATUS_UNKNOWN
}

// PayloadCredentials are used to authorize a payload.
type PayloadCredentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The GUID of the payload.
	Guid string `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	// The secret of the payload.
	Secret string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *PayloadCredentials) Reset() {
	*x = PayloadCredentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_payload_registration_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadCredentials) ProtoMessage() {}

func (x *PayloadCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_payload_registration_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadCredentials.ProtoReflect.Descriptor instead.
func (*PayloadCredentials) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_payload_registration_proto_rawDescGZIP(), []int{8}
}

func (x *PayloadCredentials) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *PayloadCredentials) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

var File_bosdyn_api_payload_registration_proto protoreflect.FileDescriptor

var file_bosdyn_api_payload_registration_proto_rawDesc = []byte{
	0x0a, 0x25, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e,
	0x61, 0x70, 0x69, 0x1a, 0x18, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x62,
	0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xa1, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62,
	0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x2d, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0xd9, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x32, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x46, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10,
	0x02, 0x22, 0xb9, 0x02, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x31, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x13, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x52, 0x12, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x25, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0e,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x44, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6f,
	0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x83, 0x02,
	0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x47, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x66, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x44, 0x4f, 0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53,
	0x54, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x41, 0x4c,
	0x53, 0x10, 0x03, 0x22, 0xf2, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x13, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x52, 0x12, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x25, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a,
	0x0e, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x9f, 0x02, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79,
	0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x62,
	0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6e, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x45, 0x4e,
	0x54, 0x49, 0x41, 0x4c, 0x53, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x50, 0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x55,
	0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x03, 0x22, 0xb6, 0x02, 0x0a, 0x1c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6f,
	0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x4f,
	0x0a, 0x13, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x6f,
	0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x12, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12,
	0x4a, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x30, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x10, 0x01, 0x12,
	0x12, 0x0a, 0x0e, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x44, 0x45, 0x54, 0x41, 0x43,
	0x48, 0x10, 0x02, 0x22, 0xa9, 0x02, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x62, 0x6f, 0x73, 0x64,
	0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x4b, 0x10,
	0x01, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x4f, 0x45, 0x53,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43,
	0x52, 0x45, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x41, 0x4c, 0x53, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x04, 0x22,
	0x40, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x42, 0x4d, 0x42, 0x18, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x31, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x68, 0x73, 0x73, 0x6e, 0x76,
	0x2f, 0x73, 0x70, 0x6f, 0x74, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x65, 0x62, 0x75, 0x69,
	0x6c, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2f, 0x61, 0x70, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bosdyn_api_payload_registration_proto_rawDescOnce sync.Once
	file_bosdyn_api_payload_registration_proto_rawDescData = file_bosdyn_api_payload_registration_proto_rawDesc
)

func file_bosdyn_api_payload_registration_proto_rawDescGZIP() []byte {
	file_bosdyn_api_payload_registration_proto_rawDescOnce.Do(func() {
		file_bosdyn_api_payload_registration_proto_rawDescData = protoimpl.X.CompressGZIP(file_bosdyn_api_payload_registration_proto_rawDescData)
	})
	return file_bosdyn_api_payload_registration_proto_rawDescData
}

var file_bosdyn_api_payload_registration_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_bosdyn_api_payload_registration_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_bosdyn_api_payload_registration_proto_goTypes = []interface{}{
	(RegisterPayloadResponse_Status)(0),       // 0: bosdyn.api.RegisterPayloadResponse.Status
	(UpdatePayloadVersionResponse_Status)(0),  // 1: bosdyn.api.UpdatePayloadVersionResponse.Status
	(GetPayloadAuthTokenResponse_Status)(0),   // 2: bosdyn.api.GetPayloadAuthTokenResponse.Status
	(UpdatePayloadAttachedRequest_Request)(0), // 3: bosdyn.api.UpdatePayloadAttachedRequest.Request
	(UpdatePayloadAttachedResponse_Status)(0), // 4: bosdyn.api.UpdatePayloadAttachedResponse.Status
	(*RegisterPayloadRequest)(nil),            // 5: bosdyn.api.RegisterPayloadRequest
	(*RegisterPayloadResponse)(nil),           // 6: bosdyn.api.RegisterPayloadResponse
	(*UpdatePayloadVersionRequest)(nil),       // 7: bosdyn.api.UpdatePayloadVersionRequest
	(*UpdatePayloadVersionResponse)(nil),      // 8: bosdyn.api.UpdatePayloadVersionResponse
	(*GetPayloadAuthTokenRequest)(nil),        // 9: bosdyn.api.GetPayloadAuthTokenRequest
	(*GetPayloadAuthTokenResponse)(nil),       // 10: bosdyn.api.GetPayloadAuthTokenResponse
	(*UpdatePayloadAttachedRequest)(nil),      // 11: bosdyn.api.UpdatePayloadAttachedRequest
	(*UpdatePayloadAttachedResponse)(nil),     // 12: bosdyn.api.UpdatePayloadAttachedResponse
	(*PayloadCredentials)(nil),                // 13: bosdyn.api.PayloadCredentials
	(*RequestHeader)(nil),                     // 14: bosdyn.api.RequestHeader
	(*Payload)(nil),                           // 15: bosdyn.api.Payload
	(*ResponseHeader)(nil),                    // 16: bosdyn.api.ResponseHeader
	(*SoftwareVersion)(nil),                   // 17: bosdyn.api.SoftwareVersion
}
var file_bosdyn_api_payload_registration_proto_depIdxs = []int32{
	14, // 0: bosdyn.api.RegisterPayloadRequest.header:type_name -> bosdyn.api.RequestHeader
	15, // 1: bosdyn.api.RegisterPayloadRequest.payload:type_name -> bosdyn.api.Payload
	16, // 2: bosdyn.api.RegisterPayloadResponse.header:type_name -> bosdyn.api.ResponseHeader
	0,  // 3: bosdyn.api.RegisterPayloadResponse.status:type_name -> bosdyn.api.RegisterPayloadResponse.Status
	14, // 4: bosdyn.api.UpdatePayloadVersionRequest.header:type_name -> bosdyn.api.RequestHeader
	13, // 5: bosdyn.api.UpdatePayloadVersionRequest.payload_credentials:type_name -> bosdyn.api.PayloadCredentials
	17, // 6: bosdyn.api.UpdatePayloadVersionRequest.updated_version:type_name -> bosdyn.api.SoftwareVersion
	16, // 7: bosdyn.api.UpdatePayloadVersionResponse.header:type_name -> bosdyn.api.ResponseHeader
	1,  // 8: bosdyn.api.UpdatePayloadVersionResponse.status:type_name -> bosdyn.api.UpdatePayloadVersionResponse.Status
	14, // 9: bosdyn.api.GetPayloadAuthTokenRequest.header:type_name -> bosdyn.api.RequestHeader
	13, // 10: bosdyn.api.GetPayloadAuthTokenRequest.payload_credentials:type_name -> bosdyn.api.PayloadCredentials
	16, // 11: bosdyn.api.GetPayloadAuthTokenResponse.header:type_name -> bosdyn.api.ResponseHeader
	2,  // 12: bosdyn.api.GetPayloadAuthTokenResponse.status:type_name -> bosdyn.api.GetPayloadAuthTokenResponse.Status
	14, // 13: bosdyn.api.UpdatePayloadAttachedRequest.header:type_name -> bosdyn.api.RequestHeader
	13, // 14: bosdyn.api.UpdatePayloadAttachedRequest.payload_credentials:type_name -> bosdyn.api.PayloadCredentials
	3,  // 15: bosdyn.api.UpdatePayloadAttachedRequest.request:type_name -> bosdyn.api.UpdatePayloadAttachedRequest.Request
	16, // 16: bosdyn.api.UpdatePayloadAttachedResponse.header:type_name -> bosdyn.api.ResponseHeader
	4,  // 17: bosdyn.api.UpdatePayloadAttachedResponse.status:type_name -> bosdyn.api.UpdatePayloadAttachedResponse.Status
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_bosdyn_api_payload_registration_proto_init() }
func file_bosdyn_api_payload_registration_proto_init() {
	if File_bosdyn_api_payload_registration_proto != nil {
		return
	}
	file_bosdyn_api_payload_proto_init()
	file_bosdyn_api_header_proto_init()
	file_bosdyn_api_robot_id_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bosdyn_api_payload_registration_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterPayloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_payload_registration_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterPayloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_payload_registration_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePayloadVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_payload_registration_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePayloadVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_payload_registration_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPayloadAuthTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_payload_registration_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPayloadAuthTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_payload_registration_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePayloadAttachedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_payload_registration_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePayloadAttachedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_payload_registration_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayloadCredentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bosdyn_api_payload_registration_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bosdyn_api_payload_registration_proto_goTypes,
		DependencyIndexes: file_bosdyn_api_payload_registration_proto_depIdxs,
		EnumInfos:         file_bosdyn_api_payload_registration_proto_enumTypes,
		MessageInfos:      file_bosdyn_api_payload_registration_proto_msgTypes,
	}.Build()
	File_bosdyn_api_payload_registration_proto = out.File
	file_bosdyn_api_payload_registration_proto_rawDesc = nil
	file_bosdyn_api_payload_registration_proto_goTypes = nil
	file_bosdyn_api_payload_registration_proto_depIdxs = nil
}
