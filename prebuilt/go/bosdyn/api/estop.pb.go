// Copyright (c) 2022 Boston Dynamics, Inc.  All rights reserved.
//
// Downloading, reproducing, distributing or otherwise using the SDK Software
// is subject to the terms and conditions of the Boston Dynamics Software
// Development Kit License (20191101-BDSDK-SL).

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: bosdyn/api/estop.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The state of the E-Stop system.
type EstopStopLevel int32

const (
	// Invalid stop level.
	EstopStopLevel_ESTOP_LEVEL_UNKNOWN EstopStopLevel = 0
	// Immediately cut power to the actuators.
	EstopStopLevel_ESTOP_LEVEL_CUT EstopStopLevel = 1
	// Prepare for loss of actuator power, then cut power.
	EstopStopLevel_ESTOP_LEVEL_SETTLE_THEN_CUT EstopStopLevel = 2
	// No-stop level. The endpoint believes the robot is safe to operate.
	EstopStopLevel_ESTOP_LEVEL_NONE EstopStopLevel = 4
)

// Enum value maps for EstopStopLevel.
var (
	EstopStopLevel_name = map[int32]string{
		0: "ESTOP_LEVEL_UNKNOWN",
		1: "ESTOP_LEVEL_CUT",
		2: "ESTOP_LEVEL_SETTLE_THEN_CUT",
		4: "ESTOP_LEVEL_NONE",
	}
	EstopStopLevel_value = map[string]int32{
		"ESTOP_LEVEL_UNKNOWN":         0,
		"ESTOP_LEVEL_CUT":             1,
		"ESTOP_LEVEL_SETTLE_THEN_CUT": 2,
		"ESTOP_LEVEL_NONE":            4,
	}
)

func (x EstopStopLevel) Enum() *EstopStopLevel {
	p := new(EstopStopLevel)
	*p = x
	return p
}

func (x EstopStopLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EstopStopLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_bosdyn_api_estop_proto_enumTypes[0].Descriptor()
}

func (EstopStopLevel) Type() protoreflect.EnumType {
	return &file_bosdyn_api_estop_proto_enumTypes[0]
}

func (x EstopStopLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EstopStopLevel.Descriptor instead.
func (EstopStopLevel) EnumDescriptor() ([]byte, []int) {
	return file_bosdyn_api_estop_proto_rawDescGZIP(), []int{0}
}

type EstopCheckInResponse_Status int32

const (
	// Unknown error occurred.
	EstopCheckInResponse_STATUS_UNKNOWN EstopCheckInResponse_Status = 0
	// Valid challenge has been returned.
	EstopCheckInResponse_STATUS_OK EstopCheckInResponse_Status = 1
	// The endpoint specified in the request is not registered.
	EstopCheckInResponse_STATUS_ENDPOINT_UNKNOWN EstopCheckInResponse_Status = 2
	// The challenge and/or response was incorrect.
	EstopCheckInResponse_STATUS_INCORRECT_CHALLENGE_RESPONSE EstopCheckInResponse_Status = 5
)

// Enum value maps for EstopCheckInResponse_Status.
var (
	EstopCheckInResponse_Status_name = map[int32]string{
		0: "STATUS_UNKNOWN",
		1: "STATUS_OK",
		2: "STATUS_ENDPOINT_UNKNOWN",
		5: "STATUS_INCORRECT_CHALLENGE_RESPONSE",
	}
	EstopCheckInResponse_Status_value = map[string]int32{
		"STATUS_UNKNOWN":                      0,
		"STATUS_OK":                           1,
		"STATUS_ENDPOINT_UNKNOWN":             2,
		"STATUS_INCORRECT_CHALLENGE_RESPONSE": 5,
	}
)

func (x EstopCheckInResponse_Status) Enum() *EstopCheckInResponse_Status {
	p := new(EstopCheckInResponse_Status)
	*p = x
	return p
}

func (x EstopCheckInResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EstopCheckInResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_bosdyn_api_estop_proto_enumTypes[1].Descriptor()
}

func (EstopCheckInResponse_Status) Type() protoreflect.EnumType {
	return &file_bosdyn_api_estop_proto_enumTypes[1]
}

func (x EstopCheckInResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EstopCheckInResponse_Status.Descriptor instead.
func (EstopCheckInResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_bosdyn_api_estop_proto_rawDescGZIP(), []int{5, 0}
}

type RegisterEstopEndpointResponse_Status int32

const (
	// An unknown / unexpected error occurred.
	RegisterEstopEndpointResponse_STATUS_UNKNOWN RegisterEstopEndpointResponse_Status = 0
	// Request succeeded.
	RegisterEstopEndpointResponse_STATUS_SUCCESS RegisterEstopEndpointResponse_Status = 1
	// Target endpoint did not match.
	RegisterEstopEndpointResponse_STATUS_ENDPOINT_MISMATCH RegisterEstopEndpointResponse_Status = 2
	// Registered to wrong configuration.
	RegisterEstopEndpointResponse_STATUS_CONFIG_MISMATCH RegisterEstopEndpointResponse_Status = 3
	// New endpoint was invalid.
	RegisterEstopEndpointResponse_STATUS_INVALID_ENDPOINT RegisterEstopEndpointResponse_Status = 4
)

// Enum value maps for RegisterEstopEndpointResponse_Status.
var (
	RegisterEstopEndpointResponse_Status_name = map[int32]string{
		0: "STATUS_UNKNOWN",
		1: "STATUS_SUCCESS",
		2: "STATUS_ENDPOINT_MISMATCH",
		3: "STATUS_CONFIG_MISMATCH",
		4: "STATUS_INVALID_ENDPOINT",
	}
	RegisterEstopEndpointResponse_Status_value = map[string]int32{
		"STATUS_UNKNOWN":           0,
		"STATUS_SUCCESS":           1,
		"STATUS_ENDPOINT_MISMATCH": 2,
		"STATUS_CONFIG_MISMATCH":   3,
		"STATUS_INVALID_ENDPOINT":  4,
	}
)

func (x RegisterEstopEndpointResponse_Status) Enum() *RegisterEstopEndpointResponse_Status {
	p := new(RegisterEstopEndpointResponse_Status)
	*p = x
	return p
}

func (x RegisterEstopEndpointResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegisterEstopEndpointResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_bosdyn_api_estop_proto_enumTypes[2].Descriptor()
}

func (RegisterEstopEndpointResponse_Status) Type() protoreflect.EnumType {
	return &file_bosdyn_api_estop_proto_enumTypes[2]
}

func (x RegisterEstopEndpointResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegisterEstopEndpointResponse_Status.Descriptor instead.
func (RegisterEstopEndpointResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_bosdyn_api_estop_proto_rawDescGZIP(), []int{7, 0}
}

type DeregisterEstopEndpointResponse_Status int32

const (
	// An unknown / unexpected error occurred.
	DeregisterEstopEndpointResponse_STATUS_UNKNOWN DeregisterEstopEndpointResponse_Status = 0
	// Request succeeded.
	DeregisterEstopEndpointResponse_STATUS_SUCCESS DeregisterEstopEndpointResponse_Status = 1
	// Target endpoint did not match.
	DeregisterEstopEndpointResponse_STATUS_ENDPOINT_MISMATCH DeregisterEstopEndpointResponse_Status = 2
	// Registered to wrong configuration.
	DeregisterEstopEndpointResponse_STATUS_CONFIG_MISMATCH DeregisterEstopEndpointResponse_Status = 3
	// You cannot deregister an endpoint while the motors are on.
	DeregisterEstopEndpointResponse_STATUS_MOTORS_ON DeregisterEstopEndpointResponse_Status = 4
)

// Enum value maps for DeregisterEstopEndpointResponse_Status.
var (
	DeregisterEstopEndpointResponse_Status_name = map[int32]string{
		0: "STATUS_UNKNOWN",
		1: "STATUS_SUCCESS",
		2: "STATUS_ENDPOINT_MISMATCH",
		3: "STATUS_CONFIG_MISMATCH",
		4: "STATUS_MOTORS_ON",
	}
	DeregisterEstopEndpointResponse_Status_value = map[string]int32{
		"STATUS_UNKNOWN":           0,
		"STATUS_SUCCESS":           1,
		"STATUS_ENDPOINT_MISMATCH": 2,
		"STATUS_CONFIG_MISMATCH":   3,
		"STATUS_MOTORS_ON":         4,
	}
)

func (x DeregisterEstopEndpointResponse_Status) Enum() *DeregisterEstopEndpointResponse_Status {
	p := new(DeregisterEstopEndpointResponse_Status)
	*p = x
	return p
}

func (x DeregisterEstopEndpointResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeregisterEstopEndpointResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_bosdyn_api_estop_proto_enumTypes[3].Descriptor()
}

func (DeregisterEstopEndpointResponse_Status) Type() protoreflect.EnumType {
	return &file_bosdyn_api_estop_proto_enumTypes[3]
}

func (x DeregisterEstopEndpointResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeregisterEstopEndpointResponse_Status.Descriptor instead.
func (DeregisterEstopEndpointResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_bosdyn_api_estop_proto_rawDescGZIP(), []int{9, 0}
}

type SetEstopConfigResponse_Status int32

const (
	// An unknown / unexpected error occurred.
	SetEstopConfigResponse_STATUS_UNKNOWN SetEstopConfigResponse_Status = 0
	// Request succeeded.
	SetEstopConfigResponse_STATUS_SUCCESS SetEstopConfigResponse_Status = 1
	// Tried to replace a EstopConfig, but provided bad ID.
	SetEstopConfigResponse_STATUS_INVALID_ID SetEstopConfigResponse_Status = 2
	// You cannot set a configuration while the motors are on.
	SetEstopConfigResponse_STATUS_MOTORS_ON SetEstopConfigResponse_Status = 4
)

// Enum value maps for SetEstopConfigResponse_Status.
var (
	SetEstopConfigResponse_Status_name = map[int32]string{
		0: "STATUS_UNKNOWN",
		1: "STATUS_SUCCESS",
		2: "STATUS_INVALID_ID",
		4: "STATUS_MOTORS_ON",
	}
	SetEstopConfigResponse_Status_value = map[string]int32{
		"STATUS_UNKNOWN":    0,
		"STATUS_SUCCESS":    1,
		"STATUS_INVALID_ID": 2,
		"STATUS_MOTORS_ON":  4,
	}
)

func (x SetEstopConfigResponse_Status) Enum() *SetEstopConfigResponse_Status {
	p := new(SetEstopConfigResponse_Status)
	*p = x
	return p
}

func (x SetEstopConfigResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetEstopConfigResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_bosdyn_api_estop_proto_enumTypes[4].Descriptor()
}

func (SetEstopConfigResponse_Status) Type() protoreflect.EnumType {
	return &file_bosdyn_api_estop_proto_enumTypes[4]
}

func (x SetEstopConfigResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetEstopConfigResponse_Status.Descriptor instead.
func (SetEstopConfigResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_bosdyn_api_estop_proto_rawDescGZIP(), []int{13, 0}
}

// An  to the robot software-E-Stop system.
type EstopEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Role of this endpoint. Should be a user-friendly string, e.g. "OCU".
	Role string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	// Name of this endpoint. Specifies a thing to fill the given role, e.g. "patrol-ocu01"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Unique ID assigned by the server.
	UniqueId string `protobuf:"bytes,3,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	// Maximum delay between challenge and response for this endpoint prior to soft power off
	// handling. After timeout seconds has passed, the robot will try to get to a safe state prior
	// to disabling motor power. The robot response is equivalent to an ESTOP_LEVEL_SETTLE_THEN_CUT
	// which may involve the robot sitting down in order to prepare for disabling motor power.
	Timeout *durationpb.Duration `protobuf:"bytes,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Optional maximum delay between challenge and response for this endpoint prior to disabling
	// motor power. After cut_power_timeout seconds has passed, motor power will be disconnected
	// immediately regardless of current robot state. If this value is not set robot will default
	// to timeout plus a nominal expected duration to reach a safe state. In practice this
	// is typically 3-4 seconds. The response is equivalent to an ESTOP_LEVEL_CUT.
	CutPowerTimeout *durationpb.Duration `protobuf:"bytes,5,opt,name=cut_power_timeout,json=cutPowerTimeout,proto3" json:"cut_power_timeout,omitempty"`
}

func (x *EstopEndpoint) Reset() {
	*x = EstopEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_estop_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstopEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstopEndpoint) ProtoMessage() {}

func (x *EstopEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_estop_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstopEndpoint.ProtoReflect.Descriptor instead.
func (*EstopEndpoint) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_estop_proto_rawDescGZIP(), []int{0}
}

func (x *EstopEndpoint) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *EstopEndpoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EstopEndpoint) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *EstopEndpoint) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *EstopEndpoint) GetCutPowerTimeout() *durationpb.Duration {
	if x != nil {
		return x.CutPowerTimeout
	}
	return nil
}

// Configuration of a root / server.
type EstopConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// EstopEndpoints that are part of this configuration.
	// Unique IDs do not have to be filled out, but can be.
	Endpoints []*EstopEndpoint `protobuf:"bytes,1,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	// Unique ID for this configuration.
	UniqueId string `protobuf:"bytes,2,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
}

func (x *EstopConfig) Reset() {
	*x = EstopConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_estop_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstopConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstopConfig) ProtoMessage() {}

func (x *EstopConfig) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_estop_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstopConfig.ProtoReflect.Descriptor instead.
func (*EstopConfig) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_estop_proto_rawDescGZIP(), []int{1}
}

func (x *EstopConfig) GetEndpoints() []*EstopEndpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *EstopConfig) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

// EstopEndpoint with some extra status data.
type EstopEndpointWithStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The endpoint.
	Endpoint *EstopEndpoint `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// Stop level most recently requested by the endpoint.
	StopLevel EstopStopLevel `protobuf:"varint,2,opt,name=stop_level,json=stopLevel,proto3,enum=bosdyn.api.EstopStopLevel" json:"stop_level,omitempty"`
	// Time since a valid response was provided by the endpoint.
	TimeSinceValidResponse *durationpb.Duration `protobuf:"bytes,3,opt,name=time_since_valid_response,json=timeSinceValidResponse,proto3" json:"time_since_valid_response,omitempty"`
}

func (x *EstopEndpointWithStatus) Reset() {
	*x = EstopEndpointWithStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_estop_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstopEndpointWithStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstopEndpointWithStatus) ProtoMessage() {}

func (x *EstopEndpointWithStatus) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_estop_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstopEndpointWithStatus.ProtoReflect.Descriptor instead.
func (*EstopEndpointWithStatus) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_estop_proto_rawDescGZIP(), []int{2}
}

func (x *EstopEndpointWithStatus) GetEndpoint() *EstopEndpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

func (x *EstopEndpointWithStatus) GetStopLevel() EstopStopLevel {
	if x != nil {
		return x.StopLevel
	}
	return EstopStopLevel_ESTOP_LEVEL_UNKNOWN
}

func (x *EstopEndpointWithStatus) GetTimeSinceValidResponse() *durationpb.Duration {
	if x != nil {
		return x.TimeSinceValidResponse
	}
	return nil
}

// Status of Estop system.
type EstopSystemStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status for all available endpoints.
	Endpoints []*EstopEndpointWithStatus `protobuf:"bytes,3,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	// Current stop level for the system.
	// Will be the most-restrictive stop level specified by an endpoint, or a stop level
	// asserted by the system as a whole (e.g. if an endpoint timed out).
	StopLevel EstopStopLevel `protobuf:"varint,4,opt,name=stop_level,json=stopLevel,proto3,enum=bosdyn.api.EstopStopLevel" json:"stop_level,omitempty"`
	// Human-readable information on the stop level.
	StopLevelDetails string `protobuf:"bytes,5,opt,name=stop_level_details,json=stopLevelDetails,proto3" json:"stop_level_details,omitempty"`
}

func (x *EstopSystemStatus) Reset() {
	*x = EstopSystemStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_estop_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstopSystemStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstopSystemStatus) ProtoMessage() {}

func (x *EstopSystemStatus) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_estop_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstopSystemStatus.ProtoReflect.Descriptor instead.
func (*EstopSystemStatus) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_estop_proto_rawDescGZIP(), []int{3}
}

func (x *EstopSystemStatus) GetEndpoints() []*EstopEndpointWithStatus {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *EstopSystemStatus) GetStopLevel() EstopStopLevel {
	if x != nil {
		return x.StopLevel
	}
	return EstopStopLevel_ESTOP_LEVEL_UNKNOWN
}

func (x *EstopSystemStatus) GetStopLevelDetails() string {
	if x != nil {
		return x.StopLevelDetails
	}
	return ""
}

// Client request for setting/maintaining an E-Stop system level.
// After the first CheckIn, must include response to previous challenge.
type EstopCheckInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common request header.
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// The endpoint making the request.
	Endpoint *EstopEndpoint `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// Challenge being responded to.
	// Don't set if this is the first EstopCheckInRequest.
	Challenge uint64 `protobuf:"varint,3,opt,name=challenge,proto3" json:"challenge,omitempty"`
	// Response to above challenge.
	// Don't set if this is the first EstopCheckInRequest.
	Response uint64 `protobuf:"varint,4,opt,name=response,proto3" json:"response,omitempty"`
	// Assert this stop level.
	StopLevel EstopStopLevel `protobuf:"varint,5,opt,name=stop_level,json=stopLevel,proto3,enum=bosdyn.api.EstopStopLevel" json:"stop_level,omitempty"`
}

func (x *EstopCheckInRequest) Reset() {
	*x = EstopCheckInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_estop_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstopCheckInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstopCheckInRequest) ProtoMessage() {}

func (x *EstopCheckInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_estop_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstopCheckInRequest.ProtoReflect.Descriptor instead.
func (*EstopCheckInRequest) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_estop_proto_rawDescGZIP(), []int{4}
}

func (x *EstopCheckInRequest) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *EstopCheckInRequest) GetEndpoint() *EstopEndpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

func (x *EstopCheckInRequest) GetChallenge() uint64 {
	if x != nil {
		return x.Challenge
	}
	return 0
}

func (x *EstopCheckInRequest) GetResponse() uint64 {
	if x != nil {
		return x.Response
	}
	return 0
}

func (x *EstopCheckInRequest) GetStopLevel() EstopStopLevel {
	if x != nil {
		return x.StopLevel
	}
	return EstopStopLevel_ESTOP_LEVEL_UNKNOWN
}

// Server response to EstopCheckInRequest.
type EstopCheckInResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common response header.
	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Copy of initial request.
	Request *EstopCheckInRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	// Next challenge to answer.
	Challenge uint64 `protobuf:"varint,3,opt,name=challenge,proto3" json:"challenge,omitempty"`
	// Status code for the response.
	Status EstopCheckInResponse_Status `protobuf:"varint,4,opt,name=status,proto3,enum=bosdyn.api.EstopCheckInResponse_Status" json:"status,omitempty"`
}

func (x *EstopCheckInResponse) Reset() {
	*x = EstopCheckInResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_estop_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstopCheckInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstopCheckInResponse) ProtoMessage() {}

func (x *EstopCheckInResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_estop_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstopCheckInResponse.ProtoReflect.Descriptor instead.
func (*EstopCheckInResponse) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_estop_proto_rawDescGZIP(), []int{5}
}

func (x *EstopCheckInResponse) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *EstopCheckInResponse) GetRequest() *EstopCheckInRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *EstopCheckInResponse) GetChallenge() uint64 {
	if x != nil {
		return x.Challenge
	}
	return 0
}

func (x *EstopCheckInResponse) GetStatus() EstopCheckInResponse_Status {
	if x != nil {
		return x.Status
	}
	return EstopCheckInResponse_STATUS_UNKNOWN
}

// Register an endpoint.
// EstopEndpoints must be registered before they can send commands or request challenges.
type RegisterEstopEndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common request header
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// The endpoint to replace.
	// Set the endpoint's unique ID if replacing an active endpoint.
	TargetEndpoint *EstopEndpoint `protobuf:"bytes,2,opt,name=target_endpoint,json=targetEndpoint,proto3" json:"target_endpoint,omitempty"`
	// ID of the configuration we are registering against.
	TargetConfigId string `protobuf:"bytes,3,opt,name=target_config_id,json=targetConfigId,proto3" json:"target_config_id,omitempty"`
	// The description of the new endpoint.
	// Do not set the unique ID. It will be ignored.
	NewEndpoint *EstopEndpoint `protobuf:"bytes,4,opt,name=new_endpoint,json=newEndpoint,proto3" json:"new_endpoint,omitempty"`
}

func (x *RegisterEstopEndpointRequest) Reset() {
	*x = RegisterEstopEndpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_estop_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterEstopEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterEstopEndpointRequest) ProtoMessage() {}

func (x *RegisterEstopEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_estop_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterEstopEndpointRequest.ProtoReflect.Descriptor instead.
func (*RegisterEstopEndpointRequest) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_estop_proto_rawDescGZIP(), []int{6}
}

func (x *RegisterEstopEndpointRequest) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *RegisterEstopEndpointRequest) GetTargetEndpoint() *EstopEndpoint {
	if x != nil {
		return x.TargetEndpoint
	}
	return nil
}

func (x *RegisterEstopEndpointRequest) GetTargetConfigId() string {
	if x != nil {
		return x.TargetConfigId
	}
	return ""
}

func (x *RegisterEstopEndpointRequest) GetNewEndpoint() *EstopEndpoint {
	if x != nil {
		return x.NewEndpoint
	}
	return nil
}

// Response to registration request.
type RegisterEstopEndpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common response header
	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Copy of the initial request.
	Request *RegisterEstopEndpointRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	// The resulting endpoint on success.
	NewEndpoint *EstopEndpoint `protobuf:"bytes,3,opt,name=new_endpoint,json=newEndpoint,proto3" json:"new_endpoint,omitempty"`
	// Status code for the response.
	Status RegisterEstopEndpointResponse_Status `protobuf:"varint,4,opt,name=status,proto3,enum=bosdyn.api.RegisterEstopEndpointResponse_Status" json:"status,omitempty"`
}

func (x *RegisterEstopEndpointResponse) Reset() {
	*x = RegisterEstopEndpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_estop_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterEstopEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterEstopEndpointResponse) ProtoMessage() {}

func (x *RegisterEstopEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_estop_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterEstopEndpointResponse.ProtoReflect.Descriptor instead.
func (*RegisterEstopEndpointResponse) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_estop_proto_rawDescGZIP(), []int{7}
}

func (x *RegisterEstopEndpointResponse) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *RegisterEstopEndpointResponse) GetRequest() *RegisterEstopEndpointRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *RegisterEstopEndpointResponse) GetNewEndpoint() *EstopEndpoint {
	if x != nil {
		return x.NewEndpoint
	}
	return nil
}

func (x *RegisterEstopEndpointResponse) GetStatus() RegisterEstopEndpointResponse_Status {
	if x != nil {
		return x.Status
	}
	return RegisterEstopEndpointResponse_STATUS_UNKNOWN
}

// Deregister the specified E-Stop endpoint registration.
type DeregisterEstopEndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common request header
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// The endpoint to deregister.
	TargetEndpoint *EstopEndpoint `protobuf:"bytes,2,opt,name=target_endpoint,json=targetEndpoint,proto3" json:"target_endpoint,omitempty"`
	// ID of the configuration we are registering against.
	TargetConfigId string `protobuf:"bytes,3,opt,name=target_config_id,json=targetConfigId,proto3" json:"target_config_id,omitempty"`
}

func (x *DeregisterEstopEndpointRequest) Reset() {
	*x = DeregisterEstopEndpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_estop_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeregisterEstopEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeregisterEstopEndpointRequest) ProtoMessage() {}

func (x *DeregisterEstopEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_estop_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeregisterEstopEndpointRequest.ProtoReflect.Descriptor instead.
func (*DeregisterEstopEndpointRequest) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_estop_proto_rawDescGZIP(), []int{8}
}

func (x *DeregisterEstopEndpointRequest) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *DeregisterEstopEndpointRequest) GetTargetEndpoint() *EstopEndpoint {
	if x != nil {
		return x.TargetEndpoint
	}
	return nil
}

func (x *DeregisterEstopEndpointRequest) GetTargetConfigId() string {
	if x != nil {
		return x.TargetConfigId
	}
	return ""
}

// Response to E-Stop endpoint  deregistration request.
type DeregisterEstopEndpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common resonse header.
	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Copy of the initial request.
	Request *DeregisterEstopEndpointRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	// Status code for the response.
	Status DeregisterEstopEndpointResponse_Status `protobuf:"varint,4,opt,name=status,proto3,enum=bosdyn.api.DeregisterEstopEndpointResponse_Status" json:"status,omitempty"`
}

func (x *DeregisterEstopEndpointResponse) Reset() {
	*x = DeregisterEstopEndpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_estop_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeregisterEstopEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeregisterEstopEndpointResponse) ProtoMessage() {}

func (x *DeregisterEstopEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_estop_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeregisterEstopEndpointResponse.ProtoReflect.Descriptor instead.
func (*DeregisterEstopEndpointResponse) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_estop_proto_rawDescGZIP(), []int{9}
}

func (x *DeregisterEstopEndpointResponse) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *DeregisterEstopEndpointResponse) GetRequest() *DeregisterEstopEndpointRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *DeregisterEstopEndpointResponse) GetStatus() DeregisterEstopEndpointResponse_Status {
	if x != nil {
		return x.Status
	}
	return DeregisterEstopEndpointResponse_STATUS_UNKNOWN
}

// Get the active EstopConfig.
type GetEstopConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common request header.
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// The 'unique_id' of EstopConfig to get.
	TargetConfigId string `protobuf:"bytes,4,opt,name=target_config_id,json=targetConfigId,proto3" json:"target_config_id,omitempty"`
}

func (x *GetEstopConfigRequest) Reset() {
	*x = GetEstopConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_estop_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEstopConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEstopConfigRequest) ProtoMessage() {}

func (x *GetEstopConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_estop_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEstopConfigRequest.ProtoReflect.Descriptor instead.
func (*GetEstopConfigRequest) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_estop_proto_rawDescGZIP(), []int{10}
}

func (x *GetEstopConfigRequest) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetEstopConfigRequest) GetTargetConfigId() string {
	if x != nil {
		return x.TargetConfigId
	}
	return ""
}

// Response to EstopConfigRequest.
type GetEstopConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common response header.
	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Copy of the request.
	Request *GetEstopConfigRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	// The currently active configuration.
	ActiveConfig *EstopConfig `protobuf:"bytes,3,opt,name=active_config,json=activeConfig,proto3" json:"active_config,omitempty"`
}

func (x *GetEstopConfigResponse) Reset() {
	*x = GetEstopConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_estop_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEstopConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEstopConfigResponse) ProtoMessage() {}

func (x *GetEstopConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_estop_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEstopConfigResponse.ProtoReflect.Descriptor instead.
func (*GetEstopConfigResponse) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_estop_proto_rawDescGZIP(), []int{11}
}

func (x *GetEstopConfigResponse) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetEstopConfigResponse) GetRequest() *GetEstopConfigRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *GetEstopConfigResponse) GetActiveConfig() *EstopConfig {
	if x != nil {
		return x.ActiveConfig
	}
	return nil
}

// Set a new active EstopConfig.
type SetEstopConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common request header.
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// New configuration to set.
	Config *EstopConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	// The 'unique_id' of EstopConfig to replace, if replacing one.
	TargetConfigId string `protobuf:"bytes,4,opt,name=target_config_id,json=targetConfigId,proto3" json:"target_config_id,omitempty"`
}

func (x *SetEstopConfigRequest) Reset() {
	*x = SetEstopConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_estop_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetEstopConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEstopConfigRequest) ProtoMessage() {}

func (x *SetEstopConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_estop_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEstopConfigRequest.ProtoReflect.Descriptor instead.
func (*SetEstopConfigRequest) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_estop_proto_rawDescGZIP(), []int{12}
}

func (x *SetEstopConfigRequest) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *SetEstopConfigRequest) GetConfig() *EstopConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *SetEstopConfigRequest) GetTargetConfigId() string {
	if x != nil {
		return x.TargetConfigId
	}
	return ""
}

// Response to EstopConfigRequest.
type SetEstopConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common response header.
	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Copy of the request.
	Request *SetEstopConfigRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	// The currently active configuration.
	ActiveConfig *EstopConfig                  `protobuf:"bytes,3,opt,name=active_config,json=activeConfig,proto3" json:"active_config,omitempty"`
	Status       SetEstopConfigResponse_Status `protobuf:"varint,4,opt,name=status,proto3,enum=bosdyn.api.SetEstopConfigResponse_Status" json:"status,omitempty"`
}

func (x *SetEstopConfigResponse) Reset() {
	*x = SetEstopConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_estop_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetEstopConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEstopConfigResponse) ProtoMessage() {}

func (x *SetEstopConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_estop_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEstopConfigResponse.ProtoReflect.Descriptor instead.
func (*SetEstopConfigResponse) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_estop_proto_rawDescGZIP(), []int{13}
}

func (x *SetEstopConfigResponse) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *SetEstopConfigResponse) GetRequest() *SetEstopConfigRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *SetEstopConfigResponse) GetActiveConfig() *EstopConfig {
	if x != nil {
		return x.ActiveConfig
	}
	return nil
}

func (x *SetEstopConfigResponse) GetStatus() SetEstopConfigResponse_Status {
	if x != nil {
		return x.Status
	}
	return SetEstopConfigResponse_STATUS_UNKNOWN
}

// Ask for the current status of the Estop system.
type GetEstopSystemStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common request header.
	Header *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *GetEstopSystemStatusRequest) Reset() {
	*x = GetEstopSystemStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_estop_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEstopSystemStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEstopSystemStatusRequest) ProtoMessage() {}

func (x *GetEstopSystemStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_estop_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEstopSystemStatusRequest.ProtoReflect.Descriptor instead.
func (*GetEstopSystemStatusRequest) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_estop_proto_rawDescGZIP(), []int{14}
}

func (x *GetEstopSystemStatusRequest) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

// Respond with the current Estop system status.
type GetEstopSystemStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common response header.
	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Status of the Estop system.
	Status *EstopSystemStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetEstopSystemStatusResponse) Reset() {
	*x = GetEstopSystemStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_estop_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEstopSystemStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEstopSystemStatusResponse) ProtoMessage() {}

func (x *GetEstopSystemStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_estop_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEstopSystemStatusResponse.ProtoReflect.Descriptor instead.
func (*GetEstopSystemStatusResponse) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_estop_proto_rawDescGZIP(), []int{15}
}

func (x *GetEstopSystemStatusResponse) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetEstopSystemStatusResponse) GetStatus() *EstopSystemStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_bosdyn_api_estop_proto protoreflect.FileDescriptor

var file_bosdyn_api_estop_proto_rawDesc = []byte{
	0x0a, 0x16, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x73, 0x74,
	0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e,
	0x2e, 0x61, 0x70, 0x69, 0x1a, 0x17, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0, 0x01,
	0x0a, 0x0d, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x45, 0x0a, 0x11, 0x63, 0x75, 0x74,
	0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0f, 0x63, 0x75, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x22, 0x63, 0x0a, 0x0b, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x37, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x45, 0x73, 0x74, 0x6f, 0x70, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x49, 0x64, 0x22, 0xe1, 0x01, 0x0a, 0x17, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x70,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x62,
	0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x53,
	0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x54, 0x0a, 0x19, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x6e, 0x63,
	0x65, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x16, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x11, 0x45, 0x73,
	0x74, 0x6f, 0x70, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x41, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x45, 0x73, 0x74, 0x6f, 0x70, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x53, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2c, 0x0a,
	0x12, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x70, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xf4, 0x01, 0x0a, 0x13,
	0x45, 0x73, 0x74, 0x6f, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79,
	0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x62, 0x6f,
	0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x53, 0x74,
	0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x22, 0xd7, 0x02, 0x0a, 0x14, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6f,
	0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x39, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x73,
	0x74, 0x6f, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79,
	0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x71, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x02, 0x12, 0x27, 0x0a, 0x23, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e,
	0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4c, 0x4c, 0x45, 0x4e, 0x47,
	0x45, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x05, 0x22, 0xfd, 0x01, 0x0a,
	0x1c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x42, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6f, 0x73, 0x64,
	0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x3c,
	0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x0b, 0x6e, 0x65, 0x77, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0xa9, 0x03, 0x0a,
	0x1d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x42, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62,
	0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x87,
	0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a,
	0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x01, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x4e, 0x44, 0x50,
	0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x4d, 0x49, 0x53, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x02, 0x12,
	0x1a, 0x0a, 0x16, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47,
	0x5f, 0x4d, 0x49, 0x53, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x45, 0x4e,
	0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x04, 0x22, 0xc1, 0x01, 0x0a, 0x1e, 0x44, 0x65, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6f,
	0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x42,
	0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x22, 0xea, 0x02, 0x0a,
	0x1f, 0x44, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x73, 0x74, 0x6f, 0x70,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x44, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x73, 0x74,
	0x6f, 0x70, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x62, 0x6f, 0x73,
	0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x4d, 0x49, 0x53,
	0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4d, 0x49, 0x53, 0x4d, 0x41, 0x54, 0x43,
	0x48, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x4f,
	0x54, 0x4f, 0x52, 0x53, 0x5f, 0x4f, 0x4e, 0x10, 0x04, 0x22, 0x74, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x45, 0x73, 0x74, 0x6f, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x22,
	0xc7, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6f, 0x73,
	0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3b,
	0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x73, 0x74, 0x6f, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0d, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x45, 0x73, 0x74, 0x6f, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xa5, 0x01, 0x0a, 0x15, 0x53, 0x65,
	0x74, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x64, 0x22, 0xe9, 0x02, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62,
	0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x3b, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x65, 0x74, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a,
	0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x41, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x62, 0x6f,
	0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x45, 0x73, 0x74, 0x6f,
	0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5d,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01,
	0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x4d, 0x4f, 0x54, 0x4f, 0x52, 0x53, 0x5f, 0x4f, 0x4e, 0x10, 0x04, 0x22, 0x50, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62,
	0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22,
	0x89, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x75, 0x0a, 0x0e, 0x45,
	0x73, 0x74, 0x6f, 0x70, 0x53, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x17, 0x0a,
	0x13, 0x45, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x53, 0x54, 0x4f, 0x50, 0x5f,
	0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x43, 0x55, 0x54, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x45,
	0x53, 0x54, 0x4f, 0x50, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x53, 0x45, 0x54, 0x54, 0x4c,
	0x45, 0x5f, 0x54, 0x48, 0x45, 0x4e, 0x5f, 0x43, 0x55, 0x54, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x04, 0x42, 0x3f, 0x42, 0x0a, 0x45, 0x73, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x68, 0x73,
	0x73, 0x6e, 0x76, 0x2f, 0x73, 0x70, 0x6f, 0x74, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x65,
	0x62, 0x75, 0x69, 0x6c, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2f,
	0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bosdyn_api_estop_proto_rawDescOnce sync.Once
	file_bosdyn_api_estop_proto_rawDescData = file_bosdyn_api_estop_proto_rawDesc
)

func file_bosdyn_api_estop_proto_rawDescGZIP() []byte {
	file_bosdyn_api_estop_proto_rawDescOnce.Do(func() {
		file_bosdyn_api_estop_proto_rawDescData = protoimpl.X.CompressGZIP(file_bosdyn_api_estop_proto_rawDescData)
	})
	return file_bosdyn_api_estop_proto_rawDescData
}

var file_bosdyn_api_estop_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_bosdyn_api_estop_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_bosdyn_api_estop_proto_goTypes = []interface{}{
	(EstopStopLevel)(0),                         // 0: bosdyn.api.EstopStopLevel
	(EstopCheckInResponse_Status)(0),            // 1: bosdyn.api.EstopCheckInResponse.Status
	(RegisterEstopEndpointResponse_Status)(0),   // 2: bosdyn.api.RegisterEstopEndpointResponse.Status
	(DeregisterEstopEndpointResponse_Status)(0), // 3: bosdyn.api.DeregisterEstopEndpointResponse.Status
	(SetEstopConfigResponse_Status)(0),          // 4: bosdyn.api.SetEstopConfigResponse.Status
	(*EstopEndpoint)(nil),                       // 5: bosdyn.api.EstopEndpoint
	(*EstopConfig)(nil),                         // 6: bosdyn.api.EstopConfig
	(*EstopEndpointWithStatus)(nil),             // 7: bosdyn.api.EstopEndpointWithStatus
	(*EstopSystemStatus)(nil),                   // 8: bosdyn.api.EstopSystemStatus
	(*EstopCheckInRequest)(nil),                 // 9: bosdyn.api.EstopCheckInRequest
	(*EstopCheckInResponse)(nil),                // 10: bosdyn.api.EstopCheckInResponse
	(*RegisterEstopEndpointRequest)(nil),        // 11: bosdyn.api.RegisterEstopEndpointRequest
	(*RegisterEstopEndpointResponse)(nil),       // 12: bosdyn.api.RegisterEstopEndpointResponse
	(*DeregisterEstopEndpointRequest)(nil),      // 13: bosdyn.api.DeregisterEstopEndpointRequest
	(*DeregisterEstopEndpointResponse)(nil),     // 14: bosdyn.api.DeregisterEstopEndpointResponse
	(*GetEstopConfigRequest)(nil),               // 15: bosdyn.api.GetEstopConfigRequest
	(*GetEstopConfigResponse)(nil),              // 16: bosdyn.api.GetEstopConfigResponse
	(*SetEstopConfigRequest)(nil),               // 17: bosdyn.api.SetEstopConfigRequest
	(*SetEstopConfigResponse)(nil),              // 18: bosdyn.api.SetEstopConfigResponse
	(*GetEstopSystemStatusRequest)(nil),         // 19: bosdyn.api.GetEstopSystemStatusRequest
	(*GetEstopSystemStatusResponse)(nil),        // 20: bosdyn.api.GetEstopSystemStatusResponse
	(*durationpb.Duration)(nil),                 // 21: google.protobuf.Duration
	(*RequestHeader)(nil),                       // 22: bosdyn.api.RequestHeader
	(*ResponseHeader)(nil),                      // 23: bosdyn.api.ResponseHeader
}
var file_bosdyn_api_estop_proto_depIdxs = []int32{
	21, // 0: bosdyn.api.EstopEndpoint.timeout:type_name -> google.protobuf.Duration
	21, // 1: bosdyn.api.EstopEndpoint.cut_power_timeout:type_name -> google.protobuf.Duration
	5,  // 2: bosdyn.api.EstopConfig.endpoints:type_name -> bosdyn.api.EstopEndpoint
	5,  // 3: bosdyn.api.EstopEndpointWithStatus.endpoint:type_name -> bosdyn.api.EstopEndpoint
	0,  // 4: bosdyn.api.EstopEndpointWithStatus.stop_level:type_name -> bosdyn.api.EstopStopLevel
	21, // 5: bosdyn.api.EstopEndpointWithStatus.time_since_valid_response:type_name -> google.protobuf.Duration
	7,  // 6: bosdyn.api.EstopSystemStatus.endpoints:type_name -> bosdyn.api.EstopEndpointWithStatus
	0,  // 7: bosdyn.api.EstopSystemStatus.stop_level:type_name -> bosdyn.api.EstopStopLevel
	22, // 8: bosdyn.api.EstopCheckInRequest.header:type_name -> bosdyn.api.RequestHeader
	5,  // 9: bosdyn.api.EstopCheckInRequest.endpoint:type_name -> bosdyn.api.EstopEndpoint
	0,  // 10: bosdyn.api.EstopCheckInRequest.stop_level:type_name -> bosdyn.api.EstopStopLevel
	23, // 11: bosdyn.api.EstopCheckInResponse.header:type_name -> bosdyn.api.ResponseHeader
	9,  // 12: bosdyn.api.EstopCheckInResponse.request:type_name -> bosdyn.api.EstopCheckInRequest
	1,  // 13: bosdyn.api.EstopCheckInResponse.status:type_name -> bosdyn.api.EstopCheckInResponse.Status
	22, // 14: bosdyn.api.RegisterEstopEndpointRequest.header:type_name -> bosdyn.api.RequestHeader
	5,  // 15: bosdyn.api.RegisterEstopEndpointRequest.target_endpoint:type_name -> bosdyn.api.EstopEndpoint
	5,  // 16: bosdyn.api.RegisterEstopEndpointRequest.new_endpoint:type_name -> bosdyn.api.EstopEndpoint
	23, // 17: bosdyn.api.RegisterEstopEndpointResponse.header:type_name -> bosdyn.api.ResponseHeader
	11, // 18: bosdyn.api.RegisterEstopEndpointResponse.request:type_name -> bosdyn.api.RegisterEstopEndpointRequest
	5,  // 19: bosdyn.api.RegisterEstopEndpointResponse.new_endpoint:type_name -> bosdyn.api.EstopEndpoint
	2,  // 20: bosdyn.api.RegisterEstopEndpointResponse.status:type_name -> bosdyn.api.RegisterEstopEndpointResponse.Status
	22, // 21: bosdyn.api.DeregisterEstopEndpointRequest.header:type_name -> bosdyn.api.RequestHeader
	5,  // 22: bosdyn.api.DeregisterEstopEndpointRequest.target_endpoint:type_name -> bosdyn.api.EstopEndpoint
	23, // 23: bosdyn.api.DeregisterEstopEndpointResponse.header:type_name -> bosdyn.api.ResponseHeader
	13, // 24: bosdyn.api.DeregisterEstopEndpointResponse.request:type_name -> bosdyn.api.DeregisterEstopEndpointRequest
	3,  // 25: bosdyn.api.DeregisterEstopEndpointResponse.status:type_name -> bosdyn.api.DeregisterEstopEndpointResponse.Status
	22, // 26: bosdyn.api.GetEstopConfigRequest.header:type_name -> bosdyn.api.RequestHeader
	23, // 27: bosdyn.api.GetEstopConfigResponse.header:type_name -> bosdyn.api.ResponseHeader
	15, // 28: bosdyn.api.GetEstopConfigResponse.request:type_name -> bosdyn.api.GetEstopConfigRequest
	6,  // 29: bosdyn.api.GetEstopConfigResponse.active_config:type_name -> bosdyn.api.EstopConfig
	22, // 30: bosdyn.api.SetEstopConfigRequest.header:type_name -> bosdyn.api.RequestHeader
	6,  // 31: bosdyn.api.SetEstopConfigRequest.config:type_name -> bosdyn.api.EstopConfig
	23, // 32: bosdyn.api.SetEstopConfigResponse.header:type_name -> bosdyn.api.ResponseHeader
	17, // 33: bosdyn.api.SetEstopConfigResponse.request:type_name -> bosdyn.api.SetEstopConfigRequest
	6,  // 34: bosdyn.api.SetEstopConfigResponse.active_config:type_name -> bosdyn.api.EstopConfig
	4,  // 35: bosdyn.api.SetEstopConfigResponse.status:type_name -> bosdyn.api.SetEstopConfigResponse.Status
	22, // 36: bosdyn.api.GetEstopSystemStatusRequest.header:type_name -> bosdyn.api.RequestHeader
	23, // 37: bosdyn.api.GetEstopSystemStatusResponse.header:type_name -> bosdyn.api.ResponseHeader
	8,  // 38: bosdyn.api.GetEstopSystemStatusResponse.status:type_name -> bosdyn.api.EstopSystemStatus
	39, // [39:39] is the sub-list for method output_type
	39, // [39:39] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_bosdyn_api_estop_proto_init() }
func file_bosdyn_api_estop_proto_init() {
	if File_bosdyn_api_estop_proto != nil {
		return
	}
	file_bosdyn_api_header_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bosdyn_api_estop_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstopEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_estop_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstopConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_estop_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstopEndpointWithStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_estop_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstopSystemStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_estop_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstopCheckInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_estop_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstopCheckInResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_estop_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterEstopEndpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_estop_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterEstopEndpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_estop_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeregisterEstopEndpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_estop_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeregisterEstopEndpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_estop_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEstopConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_estop_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEstopConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_estop_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetEstopConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_estop_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetEstopConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_estop_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEstopSystemStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_estop_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEstopSystemStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bosdyn_api_estop_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bosdyn_api_estop_proto_goTypes,
		DependencyIndexes: file_bosdyn_api_estop_proto_depIdxs,
		EnumInfos:         file_bosdyn_api_estop_proto_enumTypes,
		MessageInfos:      file_bosdyn_api_estop_proto_msgTypes,
	}.Build()
	File_bosdyn_api_estop_proto = out.File
	file_bosdyn_api_estop_proto_rawDesc = nil
	file_bosdyn_api_estop_proto_goTypes = nil
	file_bosdyn_api_estop_proto_depIdxs = nil
}
