// Copyright (c) 2021 Boston Dynamics, Inc.  All rights reserved.
//
// Downloading, reproducing, distributing or otherwise using the SDK Software
// is subject to the terms and conditions of the Boston Dynamics Software
// Development Kit License (20191101-BDSDK-SL).

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: bosdyn/api/header.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonError_Code int32

const (
	// Code is not specified.
	CommonError_CODE_UNSPECIFIED CommonError_Code = 0
	// Not an error.  Request was successful.
	CommonError_CODE_OK CommonError_Code = 1
	// Service experienced an unexpected error state.
	CommonError_CODE_INTERNAL_SERVER_ERROR CommonError_Code = 2
	// Ill-formed request.  Request arguments were not valid.
	CommonError_CODE_INVALID_REQUEST CommonError_Code = 3
)

// Enum value maps for CommonError_Code.
var (
	CommonError_Code_name = map[int32]string{
		0: "CODE_UNSPECIFIED",
		1: "CODE_OK",
		2: "CODE_INTERNAL_SERVER_ERROR",
		3: "CODE_INVALID_REQUEST",
	}
	CommonError_Code_value = map[string]int32{
		"CODE_UNSPECIFIED":           0,
		"CODE_OK":                    1,
		"CODE_INTERNAL_SERVER_ERROR": 2,
		"CODE_INVALID_REQUEST":       3,
	}
)

func (x CommonError_Code) Enum() *CommonError_Code {
	p := new(CommonError_Code)
	*p = x
	return p
}

func (x CommonError_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommonError_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_bosdyn_api_header_proto_enumTypes[0].Descriptor()
}

func (CommonError_Code) Type() protoreflect.EnumType {
	return &file_bosdyn_api_header_proto_enumTypes[0]
}

func (x CommonError_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommonError_Code.Descriptor instead.
func (CommonError_Code) EnumDescriptor() ([]byte, []int) {
	return file_bosdyn_api_header_proto_rawDescGZIP(), []int{1, 0}
}

// Standard header attached to all GRPC requests to services.
type RequestHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Time that the request was sent, as measured by the client's local system clock.
	RequestTimestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=request_timestamp,json=requestTimestamp,proto3" json:"request_timestamp,omitempty"`
	// Name of the client to identify itself. The name will typically include a
	// symbolic string to identify the program, and a unique integer to identify
	// the specific instance of the process running.
	ClientName string `protobuf:"bytes,2,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	// If Set to true, request that request and response messages for this call are not recorded
	// in the GRPC log.
	DisableRpcLogging bool `protobuf:"varint,3,opt,name=disable_rpc_logging,json=disableRpcLogging,proto3" json:"disable_rpc_logging,omitempty"`
}

func (x *RequestHeader) Reset() {
	*x = RequestHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_header_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestHeader) ProtoMessage() {}

func (x *RequestHeader) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_header_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestHeader.ProtoReflect.Descriptor instead.
func (*RequestHeader) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_header_proto_rawDescGZIP(), []int{0}
}

func (x *RequestHeader) GetRequestTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.RequestTimestamp
	}
	return nil
}

func (x *RequestHeader) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *RequestHeader) GetDisableRpcLogging() bool {
	if x != nil {
		return x.DisableRpcLogging
	}
	return false
}

// General error code are returned in the header to facilitate error-handling which is not
// message-specific.
// This can be used for generic error handlers, aggregation, and trend analysis.
type CommonError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The different error codes that can be returned on a grpc response message.
	Code CommonError_Code `protobuf:"varint,1,opt,name=code,proto3,enum=bosdyn.api.CommonError_Code" json:"code,omitempty"`
	// Human-readable error description.  Not for programmatic analysis.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Extra information that can optionally be provided for generic error handling/analysis.
	Data *anypb.Any `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CommonError) Reset() {
	*x = CommonError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_header_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonError) ProtoMessage() {}

func (x *CommonError) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_header_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonError.ProtoReflect.Descriptor instead.
func (*CommonError) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_header_proto_rawDescGZIP(), []int{1}
}

func (x *CommonError) GetCode() CommonError_Code {
	if x != nil {
		return x.Code
	}
	return CommonError_CODE_UNSPECIFIED
}

func (x *CommonError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CommonError) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

// Standard header attached to all GRPC responses from services.
type ResponseHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Echo-back the RequestHeader for timing information, etc....
	RequestHeader *RequestHeader `protobuf:"bytes,1,opt,name=request_header,json=requestHeader,proto3" json:"request_header,omitempty"`
	// Time that the request was received. The server clock is the time basis.
	RequestReceivedTimestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=request_received_timestamp,json=requestReceivedTimestamp,proto3" json:"request_received_timestamp,omitempty"`
	// Time that the response was received. The server clock is the time basis.
	ResponseTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=response_timestamp,json=responseTimestamp,proto3" json:"response_timestamp,omitempty"`
	// Common errors, such as invalid input or internal server problems.
	// If there is a common error, the rest of the response message outside of the
	// ResponseHeader will be invalid.
	Error *CommonError `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	// Echoed request message. In some cases it may not be present, or it may be a stripped
	// down representation of the request.
	Request *anypb.Any `protobuf:"bytes,5,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *ResponseHeader) Reset() {
	*x = ResponseHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bosdyn_api_header_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseHeader) ProtoMessage() {}

func (x *ResponseHeader) ProtoReflect() protoreflect.Message {
	mi := &file_bosdyn_api_header_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseHeader.ProtoReflect.Descriptor instead.
func (*ResponseHeader) Descriptor() ([]byte, []int) {
	return file_bosdyn_api_header_proto_rawDescGZIP(), []int{2}
}

func (x *ResponseHeader) GetRequestHeader() *RequestHeader {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *ResponseHeader) GetRequestReceivedTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.RequestReceivedTimestamp
	}
	return nil
}

func (x *ResponseHeader) GetResponseTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.ResponseTimestamp
	}
	return nil
}

func (x *ResponseHeader) GetError() *CommonError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ResponseHeader) GetRequest() *anypb.Any {
	if x != nil {
		return x.Request
	}
	return nil
}

var File_bosdyn_api_header_proto protoreflect.FileDescriptor

var file_bosdyn_api_header_proto_rawDesc = []byte{
	0x0a, 0x17, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x62, 0x6f, 0x73, 0x64, 0x79,
	0x6e, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xa9, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a,
	0x13, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x70, 0x63, 0x5f, 0x6c, 0x6f, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x70, 0x63, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x22, 0xe8, 0x01,
	0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x30, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x62, 0x6f,
	0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x63, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x1e,
	0x0a, 0x1a, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f,
	0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x18,
	0x0a, 0x14, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x03, 0x22, 0xd6, 0x02, 0x0a, 0x0e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0e, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0d,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x58, 0x0a,
	0x1a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x18, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x49, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x11, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x2d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x40, 0x42, 0x0b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x68, 0x73,
	0x73, 0x6e, 0x76, 0x2f, 0x73, 0x70, 0x6f, 0x74, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x65,
	0x62, 0x75, 0x69, 0x6c, 0x74, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x6f, 0x73, 0x64, 0x79, 0x6e, 0x2f,
	0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bosdyn_api_header_proto_rawDescOnce sync.Once
	file_bosdyn_api_header_proto_rawDescData = file_bosdyn_api_header_proto_rawDesc
)

func file_bosdyn_api_header_proto_rawDescGZIP() []byte {
	file_bosdyn_api_header_proto_rawDescOnce.Do(func() {
		file_bosdyn_api_header_proto_rawDescData = protoimpl.X.CompressGZIP(file_bosdyn_api_header_proto_rawDescData)
	})
	return file_bosdyn_api_header_proto_rawDescData
}

var file_bosdyn_api_header_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bosdyn_api_header_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_bosdyn_api_header_proto_goTypes = []interface{}{
	(CommonError_Code)(0),         // 0: bosdyn.api.CommonError.Code
	(*RequestHeader)(nil),         // 1: bosdyn.api.RequestHeader
	(*CommonError)(nil),           // 2: bosdyn.api.CommonError
	(*ResponseHeader)(nil),        // 3: bosdyn.api.ResponseHeader
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*anypb.Any)(nil),             // 5: google.protobuf.Any
}
var file_bosdyn_api_header_proto_depIdxs = []int32{
	4, // 0: bosdyn.api.RequestHeader.request_timestamp:type_name -> google.protobuf.Timestamp
	0, // 1: bosdyn.api.CommonError.code:type_name -> bosdyn.api.CommonError.Code
	5, // 2: bosdyn.api.CommonError.data:type_name -> google.protobuf.Any
	1, // 3: bosdyn.api.ResponseHeader.request_header:type_name -> bosdyn.api.RequestHeader
	4, // 4: bosdyn.api.ResponseHeader.request_received_timestamp:type_name -> google.protobuf.Timestamp
	4, // 5: bosdyn.api.ResponseHeader.response_timestamp:type_name -> google.protobuf.Timestamp
	2, // 6: bosdyn.api.ResponseHeader.error:type_name -> bosdyn.api.CommonError
	5, // 7: bosdyn.api.ResponseHeader.request:type_name -> google.protobuf.Any
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_bosdyn_api_header_proto_init() }
func file_bosdyn_api_header_proto_init() {
	if File_bosdyn_api_header_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bosdyn_api_header_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_header_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bosdyn_api_header_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bosdyn_api_header_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bosdyn_api_header_proto_goTypes,
		DependencyIndexes: file_bosdyn_api_header_proto_depIdxs,
		EnumInfos:         file_bosdyn_api_header_proto_enumTypes,
		MessageInfos:      file_bosdyn_api_header_proto_msgTypes,
	}.Build()
	File_bosdyn_api_header_proto = out.File
	file_bosdyn_api_header_proto_rawDesc = nil
	file_bosdyn_api_header_proto_goTypes = nil
	file_bosdyn_api_header_proto_depIdxs = nil
}
