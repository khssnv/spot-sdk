// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.17.3
// source: bosdyn/api/log_annotation_service.proto

package api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// LogAnnotationServiceClient is the client API for LogAnnotationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type LogAnnotationServiceClient interface {
	// Add the specified information to the robot's log files.
	AddLogAnnotation(ctx context.Context, in *AddLogAnnotationRequest, opts ...grpc.CallOption) (*AddLogAnnotationResponse, error)
}

type logAnnotationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLogAnnotationServiceClient(cc grpc.ClientConnInterface) LogAnnotationServiceClient {
	return &logAnnotationServiceClient{cc}
}

func (c *logAnnotationServiceClient) AddLogAnnotation(ctx context.Context, in *AddLogAnnotationRequest, opts ...grpc.CallOption) (*AddLogAnnotationResponse, error) {
	out := new(AddLogAnnotationResponse)
	err := c.cc.Invoke(ctx, "/bosdyn.api.LogAnnotationService/AddLogAnnotation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogAnnotationServiceServer is the server API for LogAnnotationService service.
// All implementations must embed UnimplementedLogAnnotationServiceServer
// for forward compatibility
type LogAnnotationServiceServer interface {
	// Add the specified information to the robot's log files.
	AddLogAnnotation(context.Context, *AddLogAnnotationRequest) (*AddLogAnnotationResponse, error)
	mustEmbedUnimplementedLogAnnotationServiceServer()
}

// UnimplementedLogAnnotationServiceServer must be embedded to have forward compatible implementations.
type UnimplementedLogAnnotationServiceServer struct {
}

func (UnimplementedLogAnnotationServiceServer) AddLogAnnotation(context.Context, *AddLogAnnotationRequest) (*AddLogAnnotationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddLogAnnotation not implemented")
}
func (UnimplementedLogAnnotationServiceServer) mustEmbedUnimplementedLogAnnotationServiceServer() {}

// UnsafeLogAnnotationServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to LogAnnotationServiceServer will
// result in compilation errors.
type UnsafeLogAnnotationServiceServer interface {
	mustEmbedUnimplementedLogAnnotationServiceServer()
}

func RegisterLogAnnotationServiceServer(s grpc.ServiceRegistrar, srv LogAnnotationServiceServer) {
	s.RegisterService(&LogAnnotationService_ServiceDesc, srv)
}

func _LogAnnotationService_AddLogAnnotation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddLogAnnotationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogAnnotationServiceServer).AddLogAnnotation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bosdyn.api.LogAnnotationService/AddLogAnnotation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogAnnotationServiceServer).AddLogAnnotation(ctx, req.(*AddLogAnnotationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// LogAnnotationService_ServiceDesc is the grpc.ServiceDesc for LogAnnotationService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var LogAnnotationService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "bosdyn.api.LogAnnotationService",
	HandlerType: (*LogAnnotationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddLogAnnotation",
			Handler:    _LogAnnotationService_AddLogAnnotation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bosdyn/api/log_annotation_service.proto",
}
